<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>MyWay</title>
		<description>Stylish Jekyll Theme</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>김뚠뚠과 함께 간 시화 나래 휴게소</title>
				<description>&lt;h1 id=&quot;시화-나래-휴게소-탐방기&quot;&gt;시화 나래 휴게소 탐방기&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;글은 겨울에 쓰지만 사실 이번 여름에 다녀왔었다. ㅎㅎ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;학교 공부에 너무 지쳐있어서 거의 burnout되기 직전에 간만에 군대 동기인 도혁이한테 전화가 왔다. 우리 학교 근처에 좋은 곳이 하나 있는데 거기에 차타고 힐링 할겸 가자는 것이였다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;아니 여기 학교 주변에 공장 밖에 없구먼 좋은 곳은 개ㅃ…&lt;/del&gt;:rage:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;그래도 안산 토박이인 도혁이가 있다는데 한 번쯤 믿어주자..&lt;/em&gt; 아니면 어때? 이 지옥같은 기숙사를 벗어나서 밖에 나가는 것만으로도 좋지:smiley:&lt;/p&gt;

&lt;p&gt;그나저나 도혁이가 차를 끌고 온다는 말을 듣고 좀 놀랐다. 
&lt;del&gt;운전?? 니가??&lt;/del&gt; ㅋㅋㅋ 평소에 군대에서 못 미더운 모습만 보여줬던 우리 김뚠뚠…&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;너 나랑 같이 동반 자살하려고 일부러 끌어들이는 건 아니겠지??..&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;그렇게 약속 시간이 되서 도혁이를 만나니까 그래도 반가웠다.ㅋㅋㅋ 학교에서 보니까 좀 새롭네~:laughing:&lt;/p&gt;

&lt;p&gt;그렇게 차에 올라타고 바로 안전벨트부터 매기 시작했다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;원래 나 안전 벨트 잘 안 매는데 너가 운전한다니까 뭔가 생명의 위협을 느끼게 되서 차게 되더라 ㅎㅎ&lt;/del&gt;:disappointed_relieved:&lt;/p&gt;

&lt;p&gt;오 근데 생각보다 운전 잘해서 매우 놀람.. 무언가 멋있어 보였어 도혁아.. 나 원래 남자한테 잘 안 설레는데 ㅎㅎ:heart:&lt;/p&gt;

&lt;p&gt;&lt;del&gt;평소에는 맨날 얘한테 욕만 박는다 ㅋㅋ 아니 욕 먹을 짓을 많이 해서…:blush:&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;다 정이 있으니까 그런거다 마&lt;/del&gt;~&lt;/p&gt;

&lt;p&gt;그렇게 도착한 시화 나래 휴게소&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-49-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이야~~ 생각보다 깔끔하고 넓고 좋네??.. 우리 도혁이 칭찬해~&lt;/p&gt;

&lt;p&gt;저녁에는 역시 뭐다? 야식이지~ 그래서 바다 앞을 두고 치킨을 시켜 먹었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-50-39.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나는 이상하게 뿌링클 치킨이 맛있더라~ 내 주변 사람들은 극혐함..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-51-25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;하 도혁아 사진 디럽게 못 찍네 정말 ㅡㅡ 이러니 내가 욕을 박지!!&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아무튼 그렇게 이것저것 이야기 나누다가 여기오면 꼭 가봐야 하는 곳이 있다고 한다.
그것은 바로 근처에 있는 달 전 망 대~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-52-34.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;보자마자 너무 가보고 싶긴 한데 저기 올라가려면 돈 내야 하나?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;NO&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;올라가는 엘레베이터가 있는데 공짜란다.&lt;/p&gt;

&lt;p&gt;바로 렛츠기릿!!!&lt;/p&gt;

&lt;p&gt;올라오니까 생각보다 깔끔하고 커피점에다가 아이스크림까지 팔고 나름 잘 꾸며놨다.:+1:&lt;/p&gt;

&lt;p&gt;근데 내가 평소에 고소 공포증을 잘 안 느끼는데 밑 바닥이 유리로 된 것을 보고 진짜 공포증이 심하게 밀려왔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-54-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;물론 밤이라 흐려서 잘 안 보이긴 했는데 그래도 진짜 무서움..&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;도혁이 앞에서는 쪽팔리니까 당당하게 걸었지만 속으로는 무ㅅ..&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;같이 여기 앉아서 사진 좀 찍자니까 초딩마냥 소리지리는 김뚠뚠씨… 어휴 꿀밤 쥐어 한대 박아주고 싶네..:punch:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-56-48.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이야~ 그래도 덕분에 이런 좋은 곳도 와보고.. 학교 몇년 다니면서 이런 곳이 있는지도 몰랐네~
덕분에 좋은 곳 알아간다 ㅋㅋ&lt;/p&gt;

&lt;p&gt;창문에 앉아서 아이스크림을 먹는데 그냥 바라보기만 해도 마음이 편하고 힐링되서 좋았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-14-57-52.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;김뚠뚠은 이때 ㄸ싸러감 ㅋㅋㅋ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;하 내가 남자랑 이런 곳에 오는 게 현타가 오긴 하는데 그래도 아무렴 어때 나중에 여자랑 오면 되지~:satisfied:&lt;/p&gt;

&lt;p&gt;&lt;del&gt;응 ㅈㄹ ㄴㄴ..&lt;/del&gt;:sob:&lt;/p&gt;

&lt;p&gt;그렇게 한 바퀴 쭉 내부 둘러보고 내려와서 산책을 좀 했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-15-00-27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Tower/2021-02-18-15-00-40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;날씨도 따뜻하고 야경도 좋고 걷다보니까 마음이 편해져서 좋더라~&lt;/p&gt;

&lt;p&gt;이런 좋은 곳 많이 알면 좀 자주 데려가줘라 뚠뚠아!!!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;요즘은 맨날 바쁘다고 찡찡거리는 우리 뚠뚠이~&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;으이구 귀여운 놈 군대에서도 그러더니 전역하고서도 찡찡되는 건 같음 ㅋㅋㅋ&lt;/del&gt;:expressionless:&lt;/p&gt;

&lt;p&gt;그래도 이날 하루 대게 좋았다. 나름 힘들게 살아가고 있었는데 주변에 친구 한 명 있으니까 이렇게 밖으로 차타고 놀러도 오고~ 다음엔 차타고 부산가자 ㅋㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;del&gt;읽으면서 욕 하고 있는 거 다 안다&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;참고로 오늘도 아침에 볼일 있어서 우리 학교 근처와서 밥 먹고 헤어졌는데&lt;/p&gt;

&lt;p&gt;이젠 너가 힐링하러 가야할 것 같더라 ㅋㅋ&lt;/p&gt;

&lt;p&gt;좀만 기다려 차사고 운전해서 갈테니까&lt;/p&gt;

&lt;p&gt;&lt;del&gt;대신 목숨 보장은 안 한다.&lt;/del&gt;:laughing:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;아 참고로 왜 김뚠뚠으로 부르냐고 궁금할 수도 있다. 군대에서 도혁이가 애매하게 뚱뚱했는데 그렇다고 김뚱뚱은 어감이 이상하고 어중간한 김뚠뚠으로 동기들이 부르게 되었다.ㅋㅋㅋ 뭔가 귀여우면서도 찰진 그런 이름~ 너무 잘 어울리잖아~&lt;/em&gt;:smiley:&lt;/p&gt;
</description>
				<pubDate>Thu, 18 Feb 2021 14:00:00 +0900</pubDate>
				<link>/daily-life/2021/02/18/DailyLife-Tower.html</link>
				<guid isPermaLink="true">/daily-life/2021/02/18/DailyLife-Tower.html</guid>
			</item>
		
			<item>
				<title>코드로 배우는 스프링 부트 웹 프로젝트-Part3-02</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;연관관계-테스트&quot;&gt;연관관계 테스트&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;현 게시물은 ‘코드로 배우는 스프링부트 웹 프로젝트’ 라는 서적을 공부하면서 개인적으로 메모하고 공부하기 위해서 작성하는 글입니다.&lt;/em&gt;&lt;/strong&gt;
—&lt;/p&gt;

&lt;p&gt;데이터를 추가하는 작업을 PK 쪽에서부터 시작하는 것이 좋다. 프로젝트를 다음 그림과 같이 구성한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-16-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;작성하는 MemberRepositoryTests에는 MemberRepository를 주입하고 예제로 사용할 Member 객체를 100개 추가하는 테스트 코드를 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MemberRepositoryTests 클래스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.test.context.SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.stream.IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SpringBootTest&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberRepositoryTests&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insertMembers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rangeClosed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@aaa.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1111&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;USER&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;memberRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;테스트의 실행 결과로 데이트베이스에 회원 데이터가 추가되었는지 확인한다.&lt;/p&gt;

&lt;p&gt;BoardRepositoryTests 코드 역시 동일한 패키지에 추가하고 앞에서 만들어진 회원 데이터를 이용해서 Board 객체를 생성해서 추가하도록 테스트 코드를 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests 클래스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.test.context.SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.PageRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.transaction.annotation.Transactional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.stream.IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootTest&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepositoryTests&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insertBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rangeClosed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@aaa.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content....&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;testInsert()는 한 명의 사용자가 하나의 게시물을 등록하도록 작성되었다. 테스트 결과는 데이터베이스를 통해 확인한다.&lt;/p&gt;

&lt;p&gt;댓글은 ReplyRepositoryTest 클래스를 작성해서 특정한 임의의 게시글을 대상으로 댓글을 추가한다. 현재 게시글은 1번부터 100번까지의 임의의 번호를 이용해서 300개의 댓글을 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReplyRepositoryTests 클래스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.test.context.SpringBootTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.stream.IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootTest&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReplyRepositoryTests&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReplyRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replyRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insertReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rangeClosed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Reply......&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replyer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;guest&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;replyRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;insertReply()는 300개의 댓글을 1~100 사이의 번호로 추가한다. 데이터베이스에는 1번부터 100번까지 게시물에 대해서 n개의 댓글이 추가된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터 추가가 완료되었다면 이제 화면에 필요한 데이터를 정리해 본다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;목록 화면: 게시글의 번호, 제목, 댓글 개수, 작성자의 이름/이메일&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-36-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;조회 화면: 게시글의 번호, 제목, 내용, 댓글 개수, 작성자 이름/이메일&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-36-55.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;엔티티 클래스들은 실제 데이터베이스상에서는 두 개 혹은 두 개 이상의 테이블로 생성되기 때문에 연관관계를 맺고 있다는 것은 데이터베이스의 입장으로 보면 조인이 필요하다는 것이다. 실제로 @ManyToOne의 경우에는 &lt;strong&gt;FK 쪽의 엔티티를 가져올 때 PK 쪽의 엔티티도 같이 가져온다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;BoardRepositoryTests를 통해서 Member를 @ManyToOne으로 참조하고 있는 Board를 조회하는 테스트 코드를 작성해 본다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests 클래스 일부&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testRead1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위의 코드를 실행하면 쿼리가 내부적으로 left outer join 처리가 된 것을 확인 가능하다.&lt;/p&gt;

&lt;p&gt;Reply와 Board 역시 @ManyToOne의 관계이므로 테스트를 하면 자동으로 조인이 처리되는 것을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReplyRepositoryTests 클래스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readReply1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replyRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 코드를 실행하면 조인이 처리된 쿼리가 실행이 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-12-26-49.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;실행된 SQL을 보면 reply 테이블, board 테이블, member 테이블까지 모두 조인으로 처리가 되는 것을 볼 수 있는데 Reply를 가져올 때 매번 Board와 Member까지 조인해서 가져올 필요가 많지는 않으므로 위와 같은 여러 테이블이 조인으로 처리되는 상황은 그다지 효율적이지 않다.&lt;/p&gt;

&lt;p&gt;위와 같이 연관관계를 가진 모든 엔티티를 같이 로딩하는 것을 ‘Eagar loading’이라고 하는데 ‘즉시 로딩’이라는 용어로 표현한다. 이는 모든 엔티티를 가져오는 장점이 있지만 여러 연관관계를 맺고 있거나 연관관계가 복잡해질수록 조인으로 인한 성능 저하를 피할 수 없다. 그래서 JPA에서는 연관관계 데이터를 어떻게 가져올 것인가에 대해서 fetch라고 하는 것을 정의 한다.&lt;/p&gt;

&lt;p&gt;즉시 로딩이 불필요한 조인까지 처리한다면 그와 반대되는 개념이 ‘Lazy Loading’이다. 
Board 클래스를 수정해보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-12-30-23.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lazy loading를 사용하는 Board 클래스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;writer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ManyToOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FetchType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LAZY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Lazy loading를 적용했다면 다시 BoardRepositorTests의 testRead1()을 실행해보자.
실행해보면 알겠지만 오류가 날것이다. 그 이유는 바로 board.getWriter() 때문인데 이는 member 테이블을 로딩해야 하는데 이미 데이터베이스와의 연결은 끝난 상태이기 때문이다. 그래서 오류 내용 중에 ‘no Session’이라는 내용은 그러한 내용이다.&lt;/p&gt;

&lt;p&gt;이러한 무제를 해결하기 위해서는 다시 한번 데이터베이스와의 연결이 필요한데 @Transactional이 바로 해결책이다. 그래서 이것을 다시 추가해준다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Transactional&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testRead1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;트랜잭션 어노테이션은 필요할 때 다시 데이터베이스와 연결이 생성된다. 이 코드를 실행하면 board 테이블만을 로딩해서 처리하고 있지만 getWriter()를 하기 위해서 memeber 테이블을 로딩하는 것을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;연관관계에서의 @ToString() 주의사항&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;내가 Board 객체의 @ToString()을 하게 되면 해당 클래스의 모든 멤버 변수를 출력하게 되는데 이는 Board의 객체와 writer 변수로 선언된 Member 객체 역시 출력하게 된다. 즉 Member를 출력하기 위해서는 Memeber 객체의 toString()이 호출되어야 하고 이때 데이터베이스 연결이 필요하게 된다.&lt;/p&gt;

&lt;p&gt;이런 문제로 인해 연관관계가 있는 엔티티 클래스의 경우 @ToString()을 할 때는 습관적으로 &lt;strong&gt;exclude 속성&lt;/strong&gt;을 사용하는 것이 좋다.&lt;/p&gt;

&lt;p&gt;exclude는 해당 속성값으로 지정된 변수는 toString()에서 제외하기 때문에 지연 로딩을 할 때는 반드시 지정해 주는 것이 좋다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jpql과-leftouter-join&quot;&gt;&lt;strong&gt;JPQL과 left(outer) join&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;목록 화면에서 게시글의 정보와 함께 댓글의 수를 같이 가져오기 위해서는 단순히 하나의 엔티티 타입을 이용할 수 없다. 이에 대한 해결책 중에서 가장 많이 쓰이는 방식은 JPQL의 조인(join)을 이용하는 것이다.&lt;/p&gt;

&lt;p&gt;Board엔티티 클래스의 내부에는 Member 엔티티 클래스를 변수로 선언하고, 연관관계를 맺고 있다. 이러한 경우에는 Board의 wrtier 변수를 이용해서 조인을 처리한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepository 인터페이스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.repository.query.Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository.search.SearchBoardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchBoardRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//한 개의 로우(Object) 내에 Object[]로 나옴&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select b, w from Board b left join b.writer w where b.bno=:bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;getBoardWithWriter()는 Board를 사용하고 있지만, Member를 같이 조회해야 하는 상황이다. Board 클래스에는 Member와의 연관관계를 맺고 있으므로 b.writer와 같은 형태로 사용한다. 이처럼 내부에 있는 엔티티를 이용할 때는 ‘LEFT JOIN’ 뒤에 ‘ON’을 이용하는 부분이 없다. 작성한 getBoardWithWriter()를 테스트 코드로 확인하자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests 테스크 코드&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testReadWithWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoardWithWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-------------------------------&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;테스트 코드의 실행 결과를 보면 지연 로딩으로 처리되었으나 실행되는 쿼리를 보면 조인 처리가 되어 한 번에 board 테이블과 member 테이블을 이용하는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-12-54-46.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;작동하는 원리를 보면 BoardRepository 인터페이스의 getBoardWithWriter 함수의 매개변수 bno가 위의 @Query부분의 마지막 b.bno=:bno에서 =:bno의 들어가게된다. 그러면 이 bno를 기준으로해서 Board b에 writer를 Left outer join하는 것이다.
@Query부분을 보면 select b, w 이 부분은 board의 b 그리고 member의 w인데 각 엔티티의 where 조건에 해당하는 모든 필드들을 가져온다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://haenny.tistory.com/34&quot;&gt;Left Outer Join의 개념&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Board와 Member 사이에는 내부적으로 참조를 통해서 연관관계가 있지만 Board와 Reply는 좀 상황이 다르다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reply 쪽이 @ManyToOne으로 참조하고 있으나 Board 입장에서는 Reply 객체들을 참조하고 있지 않기 때문에 문제가 발생한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이런 경우에는 직접 조인에 필요한 조건은 &lt;strong&gt;‘on’&lt;/strong&gt;을 이용해서 작성해 줘야 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‘특정 게시물과 해당 게시물에 속한 댓글들을 조회’&lt;/strong&gt;해야 하는 상황을 고려해 보자. 이
때는 board와 reply 테이블을 조인해서 쿼리를 작성하게 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://blog.leocat.kr/notes/2017/07/28/sql-join-on-vs-where&quot;&gt;SQL ON과 WHERE의 차이점&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;제일 중요한 것은 @Query 부분에 ON r.board=b 가 있어야 된다는 것이다. 연관관계가 있는 경우와 비교해 보면 중간에 ‘on’이 사용되면서 조인 조건을 직접 지정하는 부분이 추가되는 것이다.&lt;/p&gt;

&lt;p&gt;이제 BoardRepositoryTests 클래스에 테스트 코드를 작성해 보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testGetBoardWithReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoardWithReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;arr:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 코드를 실행하면 다음과 같은 결과가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-13-32-38.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 목록 화면에서 필요한 데이터를 정리해 보자&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;게시물(Board): 게시물의 번호, 제목, 게시물의 작성 시간&lt;/li&gt;
  &lt;li&gt;회원(Member): 회원의 이름/이메일&lt;/li&gt;
  &lt;li&gt;댓글(Reply): 해당 게시물의 댓글 수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;저 세 엔티티 중에서 우리가 가장 많이 데이터를 가져오게 될 엔티티는 Board이다 그래서 Board를 기준으로 조인 관계를 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Member는 Board 내에 wrtier 라는 필드로 연관관계를 맺고 있고 Reply는 연관관계가 없는 상황이다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;조인 후에는 Board를 기준으로 ‘GROUP BY’ 처리를 해서 &lt;strong&gt;하나의 게시물 당 하나의 라인이 될 수 있도록 처리해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;BoardRepository에는 Pageable을 파라미터로 전달받고, Page&amp;lt;Object[]&amp;gt; 리턴 타입의 getBoardWithReplyCount()를 아래와 같이 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepository 인터페이스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.repository.query.Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository.search.SearchBoardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchBoardRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//한 개의 로우(Object) 내에 Object[]로 나옴&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select b, w from Board b left join b.writer w where b.bno=:bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT b, r FROM Board b LEFT JOIN Reply r ON r.board=b WHERE b.bno=:bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT b, w, count(r) &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; FROM Board b &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; LEFT JOIN b.writer w &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; LEFT JOIN Reply r ON r.board=b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; GROUP BY b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;countQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT count(b) FROM Board b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithReplyCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;BoardRepositoryTests에는 정상적으로 JPQL이 동작 가능한지 확인해 준다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests 클래스 일부&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testWithReplyCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PageRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;descending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoardWithReplyCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;1페이지의 데이터를 처리한다고 가정하고 페이지 번호는 0으로 지정하고, 10개를 조회한다. 위의 테스트 코드의 실행 결과로 발생하는 쿼리 결과는 아래와 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-13-52-41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-18-13-52-56.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;혹여나 countQuery에 대해 궁금한 게 있다면 책의 80pg를 참고한다&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이제 조회 화면에서 필요한 JPQL를 구성해본다.&lt;/p&gt;

&lt;p&gt;조회 화면에서는 Board와 Member를 주로 이용하고, 해당 게시물이 몇 개의 댓글이 있는지를 알려주는 수준으로 작성한다. 실제 댓글은 화면에서 주로 Ajax를 이용해서 필요한 순간에 동적으로 데이터를 가져오는 방식이 일방적이다. 작성하는 JPQL은 목록 화면과 유사하게 다음과 같은 형태가 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepository 인터페이스 일부&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchBoardRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//한 개의 로우(Object) 내에 Object[]로 나옴&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select b, w from Board b left join b.writer w where b.bno=:bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT b, r FROM Board b LEFT JOIN Reply r ON r.board=b WHERE b.bno=:bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithReply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT b, w, count(r) &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; FROM Board b &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; LEFT JOIN b.writer w &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; LEFT JOIN Reply r ON r.board=b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; GROUP BY b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;countQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT count(b) FROM Board b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardWithReplyCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT b, w, count(r) &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; FROM Board b LEFT JOIN b.writer w &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; LEFT OUTER JOIN Reply r ON r.board=b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot; WHERE b.bno= :bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBoardByBno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bno&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보면 목록처리와 비슷하지만 특정한 게시물 번호를 사용하는 부분에서 차이가 있다. 
테스트 코드는 다음과 같이 작성한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepositoryTests 클래스 일부&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testRead3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoardByBno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 실행해서 결과를 확인해 본다.&lt;/p&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 19:00:00 +0900</pubDate>
				<link>/springboot/2021/02/17/learning-springboot-web-with-code-chapter05-post02.html</link>
				<guid isPermaLink="true">/springboot/2021/02/17/learning-springboot-web-with-code-chapter05-post02.html</guid>
			</item>
		
			<item>
				<title>로컬에서 서버 구동시 기본 페이지를 크롬으로 설정하기</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;기본-페이지-크롬으로-설정하기&quot;&gt;기본 페이지 크롬으로 설정하기&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아 이 Internet Explorer 확 지워버리고 싶네…
시도는 안 해봤는데 지워도 문제 안 되지 않을까?&lt;br /&gt;
&lt;del&gt;너 컴공 맞냐?&lt;/del&gt;&lt;br /&gt;
처음 cmd를 키고 프로젝트를 만든 다음
로컬에서 확인해보려고 yarn start를 하게 되면 윈도우의 경우
Internet Explorer가 디폴트로 열리게 된다.
&lt;strong&gt;우리 모두 알다시피 IE는 뒤지게 느리다…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그러므로 크롬으로 변경을 해줘야 하는데 은근히 쉽다.
만든 프로젝트 파일로 들어가서 명령어 한줄만 입력해주면 &lt;strong&gt;끝!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/React_Setting/Setting01/2021-02-17-14-25-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;set BROWSER=chrome&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 명령어 한줄로 해결 완료!!!&lt;/p&gt;

&lt;p&gt;그리고 나서 다시 yarn start를 해주면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/React_Setting/Setting01/2021-02-17-14-26-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;크롬으로 열리는 것을 볼 수 있다~!&lt;/p&gt;

&lt;h3 id=&quot;크롬-만세&quot;&gt;&lt;strong&gt;크롬 만세!!&lt;/strong&gt;&lt;/h3&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 14:00:00 +0900</pubDate>
				<link>/react-setting/2021/02/17/react-setting-01.html</link>
				<guid isPermaLink="true">/react-setting/2021/02/17/react-setting-01.html</guid>
			</item>
		
			<item>
				<title>React 로컬 yarn start 에러-Failed to compile</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;failed-to-compile-에러-해결&quot;&gt;Failed to compile 에러 해결&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;최근에 리액트를 공부하려고 책을 사서 하고 있다.
책에서 로컬로 서버를 돌리는 법을 보면서 따라하다가 예상치 못한 에러가 발생했다.
우리가 보통 Node.js를 설치할 때 패키지를 관리해 주는 npm이라는 도구가 설치된다고 배웠다.
반면에 내가 현재 공부하고 있는 책은 npm 대신 yarn이라는 패키지 관리자 도구를 설치하여 사용하는데
그 이유는 yarn이 npm을 대체할 수 있는 도구로서 더 빠르고 효율적인 캐시 시스템과 기타 부가 기능을 제공하기 때문이라고 한다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;문제는 yarn를 설치하고 yarn start를 하게 되면 바로 이러한 창이 뜬다는 것이다.&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/React_Error/Error01/2021-02-17-14-14-52.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아니 책에서 하라는데로 따라했는데 왜 안되지.. 하면서 머리를 싸매고 여러 번 읽었는데 잘못한 게 없다!!! 그래서 stackoverflow에서 서치를 좀 한 결과
시작하기 전에 무엇인가를 추가해줘야 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/React_Error/Error01/2021-02-17-14-16-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;yarn add eslint-config-react-app @typescript-eslint/eslint-plugin@2.x @typescript-eslint/parser@2.x babel-eslint@10.x eslint@6.x eslint-plugin-flowtype@4.x eslint-plugin-import@2.x eslint-plugin-jsx-a11y@6.x eslint-plugin-react@7.x eslint-plugin-react-hooks@2.x&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;프로젝트 경로에 들어가서 이 명령어를 쳐준다.
그러면 무엇인가를 다운 받고 다시 yarn start를 해주면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/React_Error/Error01/2021-02-17-14-17-29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보시다시피 제대로 컴파일이 되는 것을 볼 수 있다.&lt;/p&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 14:00:00 +0900</pubDate>
				<link>/react-error/2021/02/17/react-error01.html</link>
				<guid isPermaLink="true">/react-error/2021/02/17/react-error01.html</guid>
			</item>
		
			<item>
				<title>Guam 여행 이야기-01</title>
				<description>&lt;h1 id=&quot;guam&quot;&gt;Guam&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;벌써 괌을 갔다 온 지 2년이 다 돼간다…
그런데 왜 이제야 이 게시물을 쓰냐고?
그때는 내가 홈페이지가 없었거든 ㅎㅎ
그리고 그때의 추억을 간직하고 싶어서 쓰기로 결심했지~
2019년 여름에 갔던 걸로 기억을 하는데 현재 코로나 시국으로 아무 데도 못 가는 것을 생각했을 때 지금 생각하면 정말 천국이랑 다름없었다.
알바한 돈과 엄마가 공부하느라 수고했다고 주신 돈으로 주제넘게 나름 사치를 부렸다 ㅋㅋㅋㅋ 친구 영준이는 직장인이라 뭐… 2달 좀 안 쓰고 모으면 되겠지만 나한테는 정말 큰돈인데 갈 수 있을지도 몰랐다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아니 생각해 보면 ㅋㅋ 우리 고기 먹다가
“야 여행 가자! 괌으로!” 한 마디 지나가는 말로 했는데 진짜 갈 줄 누가 알았겠냐
어느 덧 우리는 인천 공항에 와 있었고 오래간만에 비행기를 탈 생각에 설렜지…&lt;br /&gt;
&lt;del&gt;괌에서 돈을 많이 쓰기 위해서 비행기는 최대한 저렴한 진에어&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;와 처음 상공에 떴을 때 기분이 너무 좋아서 아직도 생각이 난다.:heart_eyes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-12-49-37.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아니 근데 ㅋㅋㅋ 역시 비행깃값이 싸서 그런지 엄청 흔들리고 갑자기 몸이 붕 뜨질 않나 진짜 서로 무서워서 손잡고 있었던 기억이…&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;em&gt;게이는 아니고… 그냥 남자는 다 알잖아 그 느낌..&lt;/em&gt;&lt;/del&gt;:satisfied:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇게 도착한 괌 공항… 더운 걸 떠나서 해방감이 아주 그냥 말로 표현을 못 한다.
확실한 건 인천 공항이 진짜 세계 공항으로 인정받는 이유가 있구나 싶었음 ㅋㅋㅋㅋ 진짜 괌 공항 별거 없이 그냥 한국에 어떤 센터 건물만도 못하다…
그리고 그 건물을 나오자마자 습하고 더운 온도가 우리를 맞이해 줬다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-12-53-55.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;와 근데 진짜 덥다… 괌은 4계절 내내 이 날씨라고 한다. 습하고 덥고 밖에 오래 못 있는다. 바로 가이드를 만나고 차에 올라탔다.&lt;/p&gt;

&lt;p&gt;그렇게 향하게 된 곳이 우리가 묶을 두짓타니 호텔..
건물 사진 못 찍은 게 좀 한이다. 그래도 내부 사진은 당연히 찍었는데&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-12-55-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;로비가 정말 잘 되어 있다.&lt;/p&gt;

&lt;p&gt;그렇게 맞이하게 된 우리들의 방…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-12-57-29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;빛이 난다.. 빛이 나..:laughing:&lt;/p&gt;

&lt;p&gt;이러니 사람들이 빛내서라도 플렉스를 하는구나 싶었다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;생각해 보면 지금 괌에 온 건 2번 째인데 첫 번째는 잘 기억이 나질 않는다..&lt;/em&gt;
&lt;em&gt;중학교 수학여행으로 괌에 온 적이 있는데 그때는 별로 설레지도 않았고 학교에서 너무 학생들을 통제를 하다 보니 별 재미도 없었지만 지금은 다르다!&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;너무 설레서 나 자신이 통제가 안 됐다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-12-58-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;우리 방 창문 밖으로 바라본 뷰는 정말 말로 형용할 수 없었다.
저 푸르고 투명한 바다는 우리를 압도하기 시작하는데 그저 보고만 있어도 행복과 웃음이 절로 나온다…&lt;/p&gt;

&lt;p&gt;가이드가 짐만 놔두고 1시간 안에 다시 픽업하러 와서 밥 먹으러 간다고 했는데 외부 구경하느라 진짜 짐 풀 시간도 없이 차 타러 내려갔다.&lt;/p&gt;

&lt;p&gt;그래도 우리가 구매한 여행 패키지는 어느 정도만 구경시켜주고 나머지는 자유여행이라 무지 편했다. 사실 패키지 여행을 좀 안 좋게 봤었는데 막상 해보니까 매우 좋았는데 그 이유는 가이드를 통해 많은 지식을 얻을 수 있다는 것이다.&lt;/p&gt;

&lt;p&gt;처음에는 차를 렌트 하려고 했는데 가이드가 절대 비추를 했다. 괌은 대부분 군사 지역으로 쓰이고 지금 현재 묶고 있는 호텔 주변이 번화가이기도 하고 갈 곳이 없다는 소리를 듣고 우리는 돈을 굳혔다. 근데 실제로 지금 생각해 보면 차를 렌트했으면 정말 돈 낭비였다는 생각이 들었다.&lt;br /&gt;
&lt;em&gt;&lt;strong&gt;정말 갈 곳이 없음 ㄷㄷ&lt;/strong&gt;&lt;/em&gt;:cry:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가이드는 우리를 데리고 철판 요리 집에 먼저 갔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-03-52.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정말 싱싱한 해산물 요리와 육즙이 넘치는 고기를 먹을 수 있었는데 정말 가이드가 잘 아니까 이런 곳도 오지 남자 둘이서 귀찮아서 맛집 조사를 해서 이런 곳을 오겠나? ㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-04-42.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;아니 맛있는 음식 사진은 안 찍고 이상한 음식 사진만 찍었네…&lt;/del&gt;:astonished:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기는 약간 배 채울 정도로 많이 주는 곳은 아니고 약간 맛있는 음식을 조금조금 주는 곳이라 영준이는 많이 아쉬웠을 것이야 ㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;하지만 난 나름 만족했다구~&lt;/p&gt;

&lt;p&gt;그리고 간단한 관광지를 둘러보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-08-51.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-09-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-09-28.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;가이드형이 말해줬었는데 이 절벽으로 사랑하는 연인이 뛰어내렸다고 하는데.. 맞나? 어우 늙어서 그런지 기억도 가물가물… &lt;br /&gt;
&lt;del&gt;난 사랑해도 절대 못 뛰어내림 ㅋㅋㅋㅋ 고소 공포증이거든…&lt;/del&gt;:sunglasses:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇게 간단하게 사진 찍고 가이드형이 이곳저곳 데려간 다음 다시 호텔방으로 오게 되었다.&lt;/p&gt;

&lt;p&gt;역시 우리들의 파티는 저녁부터 시작이지~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-11-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;호텔방 서랍을 여니까 고급 진 잔들이 가득~ 바로 나가서 샴페인 하나를 사 와서
그날을 기념했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Travel/Guam/2021-02-17-13-11-59.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ㅋㅋ 남들은 다 연인이랑 와서 이러던데 뭐 어때 남자끼리도 우정을 다지러 올 수도 있지 안 그래? :sob:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;근데 솔직히 좀 ㅋㅋㅋㅋ 연인들 부럽긴 했음..&lt;/del&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;와-그나저나-침대-너무-푹신하잖아-진짜-꿀잠-잤다relaxed&quot;&gt;&lt;strong&gt;와 그나저나 침대 너무 푹신하잖아~~~ 진짜 꿀잠 잤다~:relaxed:&lt;/strong&gt;&lt;/h3&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 11:30:00 +0900</pubDate>
				<link>/travel/2021/02/17/Travel-Guam.html</link>
				<guid isPermaLink="true">/travel/2021/02/17/Travel-Guam.html</guid>
			</item>
		
			<item>
				<title>웅성선숙과 자성선숙 그리고 리처드 파인만 이야기</title>
				<description>&lt;h1 id=&quot;웅성선숙과-자성선숙&quot;&gt;웅성선숙과 자성선숙&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;새롭게 생물학이라는 카테고리를 만들어 봤는데 왜 만들었냐고?
그냥 내가 살면서 배운건데 그냥 한 번 듣고 지나치기는 아쉬워서 무언가 기록을 해두고 싶어서 ㅎㅎ
&lt;br /&gt;
&lt;del&gt;아는 척 하려고 그런 거 잖아&lt;/del&gt;:stuck_out_tongue_winking_eye:&lt;/p&gt;

&lt;p&gt;아마 생물학의 관심이 없다면 웅성선숙과 자성선숙에 대해서 처음 들어봤을 것이다.
웅성선숙은 영어로 Protandrous 자성선숙은 영어로 Protogynous라고 한다. :astonished:&lt;br /&gt;
&lt;em&gt;발음만 들어도 토나오네&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;오늘 이야기 나눠 볼 생물은 바로 흰동가리이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-37-24.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;악!! ㅋㅋㅋ 개귀여워 ㅋㅋㅋ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;영화 니모를 찾아서를 봤다면 모르는 사람이 없을 것이라고 생각된다.:smile:&lt;/p&gt;

&lt;p&gt;흰동가리는 재밌는 특성을 가지고 있다. 바로 수컷을 웅성이라고 표현을 하는데 protandrous라고 해서 이 androus는 남성성을 뜻한다고 한다. 즉 초기에 남성을 취하게 되는 것이다.
처음에 태어났을 때 대부분 새끼들이 알이나 새끼들의 형태들이 대부분 수컷을 띠고 있는 형태를 웅성선숙이라고 표현하는 것이다.&lt;/p&gt;

&lt;p&gt;이와는 반대로 자성선숙은 결국 암컷의 생식기를 갖게되는 형태라고 보면 된다.&lt;/p&gt;

&lt;p&gt;우리가 니모를 찾아서라는 영화에서 봤던 니모와 니모의 아빠는 웅성선숙에 해당하는 종 중에 하나인 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-40-28.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇다면 웅성선숙에 대해서 좀 더 알아보자.&lt;br /&gt;
니모의 아빠의 성은 수컷이였는데 환경이 바뀌고 시간이 지나가면서 개체 무리들 중에서 개체의 크기가 크거나 힘이 쎄거나 하는 특정한 개체가 암컷으로 변이되는 것이 대표적인 웅성선숙 타입에 해당된다.&lt;/p&gt;

&lt;p&gt;여기서 잠깐…!!:frowning:&lt;/p&gt;

&lt;p&gt;&lt;del&gt;이 말은… 아빠와 니모가 결혼을 할 수 있다는 말?…. 근ㅊ….&lt;/del&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;동심 깨지마~!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;자성선숙과 웅성선숙에 대한 이야기는 여기까지만 하자 ㅋㅋㅋㅋ &lt;br /&gt;
&lt;del&gt;아는 게 여기까지거든… 더 나아갔다가는 전문가의 반박을 얻을지도..&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;이제 리처드 파인만이 대학교 졸업식에서 기고문으로 낭독한 부분에 대해서 이야기 해보자&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;아니 갑자기 자성선숙과 웅성선숙 이야기 하다가 리처드 파인만 이야기로 가는 이유가 뭔데?&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;연관관계가 있냐고?&lt;/p&gt;

&lt;h3 id=&quot;no&quot;&gt;&lt;strong&gt;No&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/h3&gt;

&lt;p&gt;없는데?? ㅋㅋ 그냥 이 생물학 카테고리에 게시물은 내가 생물학에 관련된 아무 이야기를 하고 싶은 것 뿐이야 그 이상의 의미는 없어&lt;/p&gt;

&lt;p&gt;자 그러면 리처드 파인만에 대해서 이야기 해보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-47-46.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;행님 그립소… 지금까지 살아계셨으면 미래를 몇 십년이나 앞당기셨을 분…:heart_eyes:&lt;/p&gt;

&lt;p&gt;리처드 파인만의 업적은 뭐.. 쓰려면 너무 길어지니까 위키피디아를 참고하도록 하고 이번에는 그가 기고문으로 낭독한 부분에 대해서 살펴보자.&lt;/p&gt;

&lt;p&gt;실제 학생들에게 이론과 기술 개발 이야기를 하는 대신에 원주민에 대한 이야기를 하게 된다. 이 원주민들은 남태평양의 여러 개의 군도로 쪼개져 있는 Melanesian이라는 사람들이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-51-09.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 사람들이 섬에서 살고 있을 때 아무런 일이 일어나지 않았다면 참 좋았을 텐데 세계대전이 일어나 이후에 큰 일에 쳐하게 된다. 아래 사진을 보면 비행기가 보이는데 이 비행기가 나무나 건초더미를 단단히 구조화하고 옭아매서 만든 것이다. 오른쪽으론 넘어가 보면 USA라고 가슴에 새겨 놓거나 깃발을 들고 있는 모습을 볼 수 있다. 마치 나무를 총으로 깎아서 열병식을 하는 모습을 보이고 있다. 이 사람들이 뭘 하고 있는 걸까? 의문이 가는 행동들이다. 실제로 이 이야기를 하려면 세계대전에 대한 언급을 해야 하는데 수많은 전투기, 보급선들이 이 원주민들 머리 위로 거쳐가게된다.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-52-26.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-53-23.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Biology/Post-01/2021-02-17-11-54-00.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;전쟁 중에 굉음을 울리면서 다니고 있는 지금까지 보지 못했던 형태들이 해안가 부분으로 몰려들기 시작한다.
무기, 청바지 등등 이 Melanesian들이 그런 형상을 굉장히 기이하게 여겼다. 한번도 본적이 없었기 때문이다 이걸 보면서 어떤 생각을 가졌을까? 근데 이 사람들은 이것을 종교와 결합하게 된다. 이것이 가장 큰 문제였다.&lt;br /&gt;
파인먼이 이들의 형태를 &lt;strong&gt;Cargo Cult Science&lt;/strong&gt; 라고 해서 하나의 과학으로 표현을 했다.
Cargo(짐, 카고), Cult(무속신앙)-&amp;gt;비행기 자체, 그런 것들을 믿는 신앙이라는 것이다.:fearful:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 사람들은 전쟁이 끝날 때까지 이것들을 보고 전쟁이 끝난 이후엔 못 봤을 것이다. 근데 전쟁이 있었을 때 해안가에 물건이 나타나게 될 때까지만 해도 괜찮았는데 물건이 안 나타나게 되자 족장이 이것을 원인을 자신들의 원주민들의 잘못된 행동 때문이라고 생각한 것이다. 이 때문에 제사를 지내기도 하고 수많은 먹거리 과일을 쌓아놓고 빌기도 하고 무속신앙을 갖게 된 것이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;근데 사람들의 잘못을 통해서 신이 우리들에게 선물을 주지 않는 다는 생각은 잘못 된 것이다. 만약 이 사람들이 과학적 사고를 할 수 있는 능력이 있었다고 하면 그리고 인간이 호기심이 있는데 이를 궁극적으로 해결하려 했다고 하면, 소위 권위자 족장의 의견을 무시할 수 없었던 것이다. :sweat:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;그런데 파인먼 박사는 왜 과학자들에게 이런 얘기를 했을 까?&lt;/em&gt;:open_mouth:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;왜냐면 과학자들에게도 존재하는 &lt;strong&gt;cargo cult science&lt;/strong&gt;가 있기 때문이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;국내에서 보면 황우석 연구 윤리 심의를 어긴 케이스를 알고 있을 것이다. 과학자로써 우리는 어떤 생각을 가지고 있어야 할까 하면 비판적 사고 이다. 이 사람들이 정직성들을 가지고 있지 못했다는 것이다. 우리는 소위 권위자가 얘기하고 있는 학문적 연구 결과를 듣거나 찾아본다.
근데 그 데이터 혹은 그 결론이 과학적으로 믿음직스럽지 못하거나 문제가 있을 때 개선을 요구하거나 잘못된 부분을 지적할 수 있는 판단을 가지고 있어야 하는데 그것을 생각하지 않고 권위자가 얘기 했다고 해서 그걸 믿고 따르는 것을 지양해야 한다고 파인먼이 얘기를 하고 있는 것이다.:grinning:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;그러니까 비판적 사고가 중요하다는 건데… 어떻게 하면 이 능력을 기를 수 있는 지도 좀 알려주세요 행님..&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;데카르트처럼 생각의 늪에 빠져서 살다보면 비판적 사고가 좀 늘려나??..&lt;/ul&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 11:30:00 +0900</pubDate>
				<link>/biology/2021/02/17/Biology-01.html</link>
				<guid isPermaLink="true">/biology/2021/02/17/Biology-01.html</guid>
			</item>
		
			<item>
				<title>Bye.... 내 보금자리..</title>
				<description>&lt;h1 id=&quot;1인실의-행복&quot;&gt;1인실의 행복&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;와.. 벌써 여기서의 1년이 다 지났다는 생각에 소름이 돋는다..
분명 엊그제 집에서 짐싸고 이제 떠난다는 생각에 슬펐는데 ㅋㅋ
그때 집에서 짐싸는데 엄마가 에이요 데려가라고 같이 싸주심 ㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-04-35.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-04-52.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;진짜 데려가려다가 참았다…:satisfied:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;너 임마 내가 데려갔으면 밥도 못 먹고.. 살ㅇ…&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;사실 처음엔 1인실을 신청할 수 있을 지 꿈에도 몰랐다.
원래 2인실 하려다가 운좋게 1인실 자리가 나서 신청하긴 했는데 가격이 비싸기도 하고 엄마가 허락 해줄까 하면서도 했는데 다행히 승락해주셔서 운좋게 할 수 있었던 것 같다.&lt;/p&gt;

&lt;p&gt;역시.. 들어오니까 훨씬 넓고 나만의 공간으로 쓰기 딱 좋았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-07-51.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇게 시간이 지나면서 전자 기기를 하나씩 들여놓기 시작했다. ㅋㅋ:heart_eyes:
처음엔 공기청정기부터 시작해서 나중에는 1층에 큐브가서 프린트하기 너무 싫고 칼라 프린터가 너무 비싸서 아예 프린터도 장만했다.
지금은 겨울이라서 공기가 건조해 가습기까지 들여놓은 상황 ㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;del&gt;짱깨가 만든거라서 좀 그렇긴 한데 일단 IOT 제품이니까 참는다 ㅋㅋ&lt;/del&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;진짜 정 많이 들었다 이곳…:cry:&lt;/p&gt;

&lt;p&gt;다른 곳에 자취해도 여기만한 곳이 없을거야…
교수님한테 혼나고 밖에서 스트레스 받고 들어오면 여기만한 보금자리가 없더라
나만의 공간..
내가 원래 생활 패턴이 좀 남들과는 달라서 다음 2인실에는 어떻게 살지 모르겠다…
물론 아는 동생과 같이 살긴 하는데 그럴수록 더욱 더 조심해야한다는 것을 알기에 :weary:
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-11-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 조그만한 냉장고에 내가 먹고 싶은 거 다 넣어놨었는데 ㅋㅋㅋ 이제 2인실 쓰면 반 밖에 못써서 어쩌누 ㅠㅠ&lt;/p&gt;

&lt;p&gt;&lt;del&gt;딸기 우유 좀 제발 그만 보내줘 엄마 ㅡㅡ 나 이제 27살이라고!!&lt;/del&gt;&lt;br /&gt;
그래도 나름 추억도 많고 내가 편안히 쉴수 있는 공간을 마련해준 이 공간 고맙다…&lt;/p&gt;

&lt;p&gt;무엇보다 화장실은 잊지 못할거야 ㅠㅠ&lt;br /&gt;
&lt;del&gt;내부 사진도 찍고 싶은데 ㅋㅋㅋ 내가 최근에 청소를 안 해서리…&lt;/del&gt;&lt;br /&gt;
&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-13-03.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;화장실이 아무래도 장애인실을 기준으로 만든 거라서 전동식으로 되어 있는데
어느 날 내가 기숙사 전기 공사한다고 한동안 정전 공지를 잊고 있었다가 문 안 열어놓은 적이 있었는데 그때는 진짜 화장실 문 안 열려서 엘베 타고 1층까지 내려가서 로비 화장실을 썼었다는 ㅠㅠ&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래도 화장실 내부 공간이 너무 넓어서 좋았다!&lt;/p&gt;

&lt;p&gt;오히려 집에가서 화장실 쓰려니까 너무 좁아서 불편했을 정도로 ㅋㅋㅋ&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;이 바보야!!! 왜 1인실을 신청 못한거야!!&lt;/strong&gt;&lt;/em&gt;
&lt;em&gt;&lt;strong&gt;손이 느려!!!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;그러니까 피아노도 못쳤지!!&lt;/del&gt;:rage:&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래도 정말 편히 쉬다 간다 이방…&lt;/p&gt;

&lt;p&gt;정말 그리울꺼야 아무리 넓은 집에 이사가도 이만한 곳이 없어..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DailyLife/Dorm/2021-02-17-11-17-35.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사요나라&quot;&gt;&lt;em&gt;사요나라~&lt;/em&gt;&lt;/h2&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 11:00:00 +0900</pubDate>
				<link>/daily-life/2021/02/17/DailyLife-Dorm.html</link>
				<guid isPermaLink="true">/daily-life/2021/02/17/DailyLife-Dorm.html</guid>
			</item>
		
			<item>
				<title>프랑크 소나타</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;césar-franck-césar-franck-sonata-for-cello-and-piano&quot;&gt;César Franck :César Franck-Sonata for Cello and Piano&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아마 일반인이라면 프랑크에 대해서 잘 못 들어 봤을 것이다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;왜냐면 음악을 전공했었던 나도 불과 2년 전에 알았ㄱ…&lt;/del&gt;:disappointed_relieved:&lt;/p&gt;

&lt;p&gt;어느덧 벌써 친한 친구의 석사 졸업 연주 날이 다가오고 프로그램에 프랑크 소나타가 있는 것을 보고 설렜다…:grinning:&lt;/p&gt;

&lt;p&gt;항상 멜론에서 바이올린 버젼의 프랑크 소나타만 듣다가 첼로 버젼의 프랑크 소나타를 듣는다고 생각하니까 색다르면서도 기대되었다. 물론 처음 듣는 건 아니다. 유투브로 고티에 카푸송의 마스터 클래스에서 이 곡을 레슨 해준 것을 본 적이 있다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;지금은 유투브로 찾으려고 해도 삭제되고 없다…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;아무튼 이 프랑크 소나타를 연주하는 Hong의 프로필을 살펴보자&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Classic/Frank-01/hong.jpg&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;350&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Profile&lt;br /&gt;&lt;br /&gt;
선화예술중학교 졸업&lt;br /&gt;
선화예술고등학교 수석 입학 및 졸업(수석 입학인데 수석 졸업인지는 모름 ㅎㅎ)&lt;br /&gt;
Hochschule für Musik und Theater München 학사 졸업&lt;br /&gt;
Hochschule für Musik und Theater München 석사 졸업&lt;br /&gt;
카잘스 첼로 콩쿠르 우승 (예정)&lt;br /&gt;
독일 도차우어 국제 첼로 콩쿠르 우승 (예정)&lt;br /&gt;
펜데레츠키 국제 첼로 콩쿠르 우승 (예정)&lt;br /&gt;
파울로 첼로 콩쿠르 우승 (예정)&lt;br /&gt;
윤이상국제음악콩쿠르 첼로 우승 (예정)&lt;br /&gt;
제네바 국제 콩쿠르 첼로 우승 (예정)&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;del&gt;본인이 보면 나 개쳐맞겠ㄴ… ㅋㅋㅋㅋ&lt;/del&gt;:blush:&lt;/p&gt;

&lt;p&gt;&lt;del&gt;아는 국제 콩쿨 이름 다 써놈ㅋㅋㅋㅋ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;아무튼 이번 졸업연주는 언제 하는지는 알았는데 몇시 어디서 하는지는 몰라서 누나한테 물어봤다는…&lt;/p&gt;

&lt;p&gt;&lt;del&gt;&lt;em&gt;안 알려준거 선 넘은거 아니냐!!!&lt;/em&gt;&lt;/del&gt;:rage:&lt;/p&gt;

&lt;p&gt;어쨌든 그렇게 시작한 sister의 연주…&lt;/p&gt;

&lt;p&gt;:clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap::clap:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Classic/Frank-01/2021-02-17-09-17-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;프랑크 소나타는 제일 마지막..&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;ㅋㅋ 이때 누나랑 카톡하면서 봤는데 누나가 드레스 골라줬다고 자랑스러워 하셨음 :laughing:&lt;/p&gt;

&lt;p&gt;잘 어울리긴 한다. 드레스에서도 빛나는데 음악에서도 빛이 나네~!&lt;/p&gt;

&lt;p&gt;&lt;del&gt;연주 끝나고 빛나는 은갈치 같다고 놀림 ㅋㅋ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Classic/Frank-01/2021-02-17-09-20-10.png&quot; alt=&quot;&quot; width=&quot;400&quot; height=&quot;450&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 분이 바로 갓랑크…&lt;/p&gt;

&lt;p&gt;프랑크는 1822년 당시에는 네덜란드 땅이던 오늘날 벨기에 리에쥬에서 태어난 19세기 프랑스 기악 음악의 발전에 기여한 작곡가이며 피아니스트이자 오르간 연주자 및 음악 교육자였다.&lt;/p&gt;

&lt;p&gt;사실 이 소나타 하나 말고는 이 분이 작곡한 곡은 들어본 적이 없는데 사실 많은 곡을 작곡하신 분이다.&lt;/p&gt;

&lt;p&gt;그는 작곡가로서 피아노 삼중주, 피아노 오중주, 바이올린 소나타와 같은 실내악 장르를 비롯해 전주곡, 푸가와 변주곡 등 많은 곡을 작곡하였다.&lt;/p&gt;

&lt;p&gt;그 중에 이 소나타는 바이올리니스트인 이자이의 결혼을 축하하며 헌정한 곡이라는데 결혼을 주제로 ‘첫 만남의 설레임’과 ‘격렬한 사랑’, ‘갈등’ ,’해피엔딩’의 모습을 4악장으로 담아냈다고 한다.&lt;/p&gt;

&lt;p&gt;어쩐지 내가 1악장 들으면서 느끼는 감정이 이 감정이였구나 ㅋㅋ 뭐라고 설명은 못하겠는데 첫 소절은 항상 들을 때마다 설렜단 말이지~&lt;/p&gt;

&lt;p&gt;사실상 근데 들으면서 느꼈던 것은 악장의 의미가 없다는 것이다. 왜냐면 듣다보면 우리의 인생처럼 하나의 흐름으로 쭉 간다는 느낌이 강하다. 인생에서도 등고등락이 있듯이 이 곡도 사랑 속에서의 감정 변화를 섬세하게 나타내고 있다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;와 이 곡을 헌정받은 사람은 얼마나 행복할ㄲ…&lt;/del&gt;:relaxed:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=e4g-geR0m7I&quot;&gt;Youtube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;원래 sister가 연주하는 동영상을 올릴까 하다가 자신의 유투브 홈페이지에 안 올려놔서 링크를 달 수가 없었다…
물론 내가 녹화는 하긴 했지만 1, 2 악장만 하고 끊어지는 거라&lt;/p&gt;

&lt;p&gt;&lt;del&gt;약간 똥싸다 만 느낌 들까봐…&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;그것을 대신해서 Sister가 좋아하는 카푸송이 연주한 곡으로 링크를 대체해봤다 ㅋㅋ&lt;br /&gt;
&lt;del&gt;솔직히 말해 이 사람의 연주가 좋은 거야?? 잘생겨서 좋은거야? ㅋㅋㅋㅋㅋ&lt;/del&gt;:laughing:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1 악장&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allegretto ben moderato&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;내가 제일 좋아하는 악장이다. 시적인 아름다움을 지닌 1악장은 꿈꾸듯 모호하게 시작했다가 점차 활기를 얻어 클라이막스까지 도달한 뒤 점차 수구러들어 첫머리 악상으로 되돌아간다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2 악장&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allegro&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;마지막 대목이 지닌 부드러운 위안감을 거칠게 짓밟으면서 시작한다. 한층 가라앉은 느낌의 경과구를 거쳐 화성 진행이 적절한 방식으로 재구축된 재현부와 신비롭게 시작했다가 불온함을 더해가는 코다로 넘어가 지극히 강렬하게 끝난다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3 악장&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recitativo- Fantasia. Ben moderato-molto lento&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;극히 인산적인 3악장의 도입부는 1악장 1주제와 같은 음형을 공유하며, 이어지는 악상은 악장 표제가 말해주듯이 레치타티보풍이다. 거의 초현실적인 중간부에서는 투쟁하는 듯한 두 주제가 등장하며, 이들은 모두 피날레에서 의기양양한 모습으로 재등장하게 된다. 3 악장은 갈등하는 연인을 침울하게 그리고 피아노 선율을 바이올린이 뒤쫓아가듯 대화를 나누는 4악장은 해피엔딩을 짐작하게 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 악장&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allegretto poco mosso&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;자유스러운 론도. 피아노가 먼저 주제를 제시하면 바이올린이 따라가는 캐논형식으로 시작한다. 피아노는 3악장의 판타지아 주제를, 바이올린은 장식적인 대구로 응답한다. 피아노의 경과구에 이어 론도 주제로 돌아가 한층 고조되며 피아노의 론도 주제에 이어 다시 캐논풍으로 회귀한다. 코다의 론도 주제에 따른 긴 트릴로 곡은 끝난다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Classic/Frank-01/2021-02-17-09-37-54.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;후기&quot;&gt;&lt;strong&gt;후기&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;아니 정말 잘 듣고 있었는데 스트리밍이 2악장을 마치고 끊어졌다… 실화냐??
처음에는 대학교 측에서 스트리밍 해주는 줄 알았는데 알고보니 본인 핸드폰으로 고정시켜놓고 해주고 있는 것이였다:cry:&lt;/p&gt;

&lt;p&gt;아마 중간에 와이파이가 끊어진것 같다는데 하…
혹여나 다시 틀어주지 않을까 30분 동안 기다렸지만 역시나 그걸로 끝이였다.
그래도 프랑크 소나타 전에 슈만과 베토벤을 들었으니 위안을 삼는다 ㅠㅠ&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Classic/Frank-01/2021-02-17-09-43-23.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;연주하기 전에 그렇게 연습 안 했다고 찡찡대더니 잘하기만 하는 구먼!! 역시
&lt;del&gt;허언ㅈ… ㅋㅋㅋㅋ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;정말 실제 라이브로 못 들은 게 한이다.. 그래서 언제쯤 라이브로 들을 수 있는건데!!!???
바흐 첼로 무반주 좀 그렇게 연주해달라니까 안해주더니 ㅋㅋ 내가 꼭 언젠가는 배워서 할거다!:smiling_imp:&lt;br /&gt;
그래도 평소에는 안 그래 보여도 첼로 활만 잡으면 사람이 변하는 Hong… 너무 멋있다.
본인은 그때 악기 수리하고 마음에 안 들어서 망쳤다는데 내 똥귀에는 시간 가는 줄 모르고 들었다&lt;br /&gt;
&lt;del&gt;듣다보니 새벽 2시가 후딱 지나가버렸ㄷ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;다음에도 이런 연주 기회 있으면 꼭 알려달라구!!&lt;br /&gt;
역시 대가들 연주 듣는 것 보다 아는 사람 연주 듣는 게 최고로 좋다 ㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;졸업 진심으로 축하해~!!&lt;/strong&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 17 Feb 2021 08:00:00 +0900</pubDate>
				<link>/classic/2021/02/17/classic-Frank-01.html</link>
				<guid isPermaLink="true">/classic/2021/02/17/classic-Frank-01.html</guid>
			</item>
		
			<item>
				<title>코드로 배우는 스프링 부트 웹 프로젝트-Part3-01</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;n1다대일-연관관계-board-만들기&quot;&gt;&amp;lt;N:1(다대일) 연관관계&amp;gt; Board 만들기&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;현 게시물은 ‘코드로 배우는 스프링부트 웹 프로젝트’ 라는 서적을 공부하면서 개인적으로 메모하고 공부하기 위해서 작성하는 글입니다.&lt;/em&gt;&lt;/strong&gt;
—&lt;/p&gt;

&lt;p&gt;여기서는 ‘회원’과 ‘게시글’ 그리고 ‘댓글’이라는 주제로 JPA에서 연관관계를 가장 쉽게 적용할 수 있는 방법을 알아본다.
먼저 연관관계와 관계형 데이터베이스 설계를 해야 한다. :disappointed:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;‘회원’과 ‘게시글’의 관계를 다음과 같은 명제로 나타내본다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;한 명의 회원은 여러 게시글을 작성할 수 있다.&lt;/li&gt;
  &lt;li&gt;하나의 게시글은 한 명의 회원에 의해서 작성된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래 사진을 보면 회원 데이터의 아이디는 PK에 해당한다. 아이디는 회원을 구분할 수 있는 고유한 값을 가지게 되는 것이다.
게시글 데이터를 보면 작성자 칼럼 값으로 동일한 회원 아이디가 여러 번 나오는 것을 볼 수 있다. 회원 데이터의 입장에서는 하나(One)의 PK(아이디)가 여러(Many) 게시글에서 참조(FK)되고 있는 관계가 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-00-46.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;회원 데이터 쪽이 ‘일(one)’이고, 게시글 데이터는 동일한 회원 아이디가 여러 번 나오고 있으므로 ‘다(many)’로 판단하고 다음과 같이 ERD를 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-05-42.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;데이터베이스에서 관계를 해석할 때는 항상 PK 쪽에서 해석하고, 이를 반영해야 혼란을 줄일 수 있다&lt;/strong&gt; :open_mouth:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, 앞에서 이야기했던 두 명제는 다음과 같이 해석되어야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;한 명의 회원은 여러 개의 게시글을 작성할 수 있다(PK에서 해석)&lt;/li&gt;
  &lt;li&gt;하나의 게시글은 한 명의 작성자만을 표시할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 ‘회원, 게시글, 댓글’의 관계를 PK를 기준으로 설계해보면 다음과 같은 구조가 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-17-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;회원이 있어야 게시글을 작성할 수 있으므로 회원 테이블을 먼저 설계하고 게시글을 작성할 때는 특정 회원과의 관계를 설정해 주어야 한다. 댓글은 게시글이 있어야만 작성할 수 있으므로 게시글을 우선 설계하고, 댓글 테이블이 게시글을 FK로 작성한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;JPA는 객체지향의 입장에서 관계를 보는데 간단한 시작은 객체지향보다는 관계형 데이터베이스 모델링을 위주로 해서 구성하는 것이 편리하다.
:thumbsup:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;예제-프로젝트의-생성&quot;&gt;&lt;strong&gt;예제 프로젝트의 생성&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트의 생성은 ‘board’라는 이름의 프로젝트로 생성하고 Gradle, War 항목을 선택한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-23-58.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;추가할 라이브러리는 ‘Spring Boot DevTools, Lombok, Spring Web, Thymeleaf, Spring Data JPA 등을 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-24-30.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MariaDB JDBC 드라이버와 Thymeleaf의 시간 처리 관련 라이브러리를 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“나는 mysql를 선호해서 mysql connector로 대신했다”&lt;/em&gt; :satisfied:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-26-35.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;application.properties 파일에는 JPA 관련 설정을 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-16-21-29-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 내에 entity 패키지를 생성하고, 이전 예제에서 사용했던 BaseEntity 클래스를 추가한다. 그리고 미리 dto와 controller 패키지를 추가해 놓는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-18-12-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BaseEntity 클래스&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.Getter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.annotation.CreatedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.annotation.LastModifiedDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.domain.support.AuditingEntityListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.EntityListeners&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.MappedSuperclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.time.LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@MappedSuperclass&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EntityListeners&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;AuditingEntityListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@CreatedDate&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;regdate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updatable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@LastModifiedDate&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;moddate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalDateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BoardApplication에는 @EnalbeJpaAuditing을 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardApplication 클래스&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.config.EnableJpaAuditing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableJpaAuditing&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;BoardApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;연관관계의 설정은 처음부터 설정하는 방식 보다는 엔티티 클래스들을 구성한 이후에 각 엔티티 클래스의 연관관계를 고민해서 설정하는 것이 더 수월하다.
entity 패키지에 Member(회원), Board(게시물), Reply(댓글) 엔티티 클래스를 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-18-23-25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;회원 엔티티 클래스는 최근에 많이 사용하는 이메일(email)을 사용자의 아이디 대신에 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Member 클래스&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.Id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Member 클래스는 이메일 주소를 PK로 사용한다. 따로 FK를 사용하진 않는다. 그래서 별도의 참조가 필요가 없다.&lt;/p&gt;

&lt;p&gt;Board 클래스는 Member의 이메일(PK)을 FK로 참조하는 구조이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Board 클래스&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;writer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Reply 클래스는 회원이 아닌 사람도 댓글을 남길 수 있다고 가정하고 Board와 연관관계를 맺지 않은 상태로 처리한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reply 클래스&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;board&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replyer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터베이스 구조로 보면 앞으로 생성될 board 테이블과 member 테이블에는 FK를 이용한 참조가 걸려 있게 된다. member 쪽의 email을 board에서는 FK로 참조하는 구조이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-00-48.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;board와 member 관계는 N:1(다대일)의 관계가 되므로 JPA에서는 이를 의미하는 @ManyToOne을 적용한다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;@ManyToOne은 데이터베이스상에서 외래키의 관계로 연결된 엔티티 클래스에 설정한다.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;보면 member 엔티티의 PK가 email이니까 board 클래스에서 저렇게 Member writer 위에 어노테이션으로 @ManyToOne를 해주면 자동으로 email과 연관된 FK가 생성되는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Board 클래스의 변경&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;writer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ManyToOne&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Reply 쪽에서는 Board 쪽의 PK를 참조해서 구성되어야 하므로 아래와 같이 수정한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reply 클래스 변경&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lombok.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.persistence.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Getter&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ToString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;board&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replyer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ManyToOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FetchType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LAZY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로그램을 실행해서 테이블과 연관관계가 정상적으로 만들어졌는지 확인을 한다.
테이블이 정상적으로 생성되었다면 각 엔티티에 맞는 Repository 인터페이스를 추가한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-15-47.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MemberRepository 인터페이스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BoardRepository 인터페이스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.domain.Pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.repository.query.Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository.search.SearchBoardRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReplyRepository 인터페이스&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.Modifying&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.data.jpa.repository.Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.zerock.board.entity.Reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReplyRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Reply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To be Continued…&lt;/p&gt;
</description>
				<pubDate>Mon, 15 Feb 2021 19:00:00 +0900</pubDate>
				<link>/springboot/2021/02/15/learning-springboot-web-with-code-chapter05-post01.html</link>
				<guid isPermaLink="true">/springboot/2021/02/15/learning-springboot-web-with-code-chapter05-post01.html</guid>
			</item>
		
			<item>
				<title>Intellij(인텔리제이) cannot resolve symbol 에러</title>
				<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;cannot-resolve-symbol-에러-해결&quot;&gt;Cannot resolve symbol 에러 해결&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이전에 인텔리제이로 만들었던 파일에서 확인할 것이 좀 있어서 열어봤더니 갑자기 &lt;strong&gt;빨간줄&lt;/strong&gt; 쳐지고 난리도 아니였다. :scream:&lt;/p&gt;

&lt;p&gt;뭐지뭐지… 하다가 gradle 멀쩡하고 import도 제대로 되어 있고 어노테이션도 확인했지만 이상이 없었다. 그래서 역시 갓Google덕분에 해결할 수 있었다.&lt;/p&gt;

&lt;p&gt;찾아보니 이것저것 해봐야되는데 다행히 &lt;strong&gt;Simple&lt;/strong&gt;하게 해결했다.:laughing:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;상단 메뉴바=&quot;&quot;&gt; File-&amp;gt;Invalidate Caches / Restart...
&lt;/상단&gt;
&lt;/blockquote&gt;

&lt;p&gt;이것을 클릭하면 저절로 Intellij가 재시작되는데 이제 빨간줄이 사라졌다!!!..&lt;/p&gt;

&lt;p&gt;역시 무슨 일이 일어났을 땐 Google or StackOverflow가 진리다…&lt;/p&gt;

&lt;hr /&gt;
</description>
				<pubDate>Mon, 15 Feb 2021 19:00:00 +0900</pubDate>
				<link>/intellij-error/2021/02/15/intellij-error01.html</link>
				<guid isPermaLink="true">/intellij-error/2021/02/15/intellij-error01.html</guid>
			</item>
		
	</channel>
</rss>
