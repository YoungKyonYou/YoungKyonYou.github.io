I"*<p><span style="color:orange; font-weight:bold"><em>해당 내용은 책 ‘코드로 배우는 스프링 부트 웹 프로젝트’에 나오는 내용이며 이는 개인적으로 공부하기 위해 기록함을 알려드립니다</em></span></p>

<p><br /><br /></p>

<h1 id="remember-me와-preauthorize"><center>Remember me와 @PreAuthorize</center></h1>

<p><br /></p>

<p>스프링 시큐리티의 편리한 기능 중에서 ‘자동 로그인’이라고 불리는 <strong>‘Remember me’</strong>는 최근 모바일과 함께 많이 사용된다. <strong>‘Remember me’</strong>는 웹의 인증 방식 중에 ‘쿠키(HttpCookie)’를 사용하는 방식이다. 이 기능을 활용하면 한번 로그인한 사용자가 브라우저를 닫은 후에 다시 서비스에 접속해도 별도의 로그인 저차 없이 바로 로그인 처리가 진행된다.</p>

<p><br /></p>

<p><strong>‘Remember me’</strong>에 대한 설정은 아주 간단하다. SecurityConfig에 아래와 같이 remembeMe()설정을 추가하고 UserDetailsService를 지정하면 된다.</p>

<p><strong>SecurityConfig.java</strong></p>

<p>```java
(…)
@Override
    protected void configure(HttpSecurity http) throws Exception {
       //http.authorizeRequests()로 인증이 필요한 자원들을 설정할 수 있고 antMatchers()는
        // ‘<em>*/</em>‘와 같은 앤트 스타일의 패턴으로 원하는 자원을 선택할 수 있다.
        //마지막으로 permitAll()의 경우는 말 그대로 ‘모든 사용자에게 허락’한다는 의미이므로
        //로그인하지 않은 사용자도 익명의 사용자로 간주되어서 접근이 가능하게 된다.
        //프로젝트를 재시작해서 /sample/all에 접속하면 별도의 로그인 없이도 접근이 가능해 진다.
        http.authorizeRequests().antMatchers(“/sample/all”).permitAll()
                                //아래와 같이 설정하고 /sample/member’를 호출하면 Access Denied 된다.
                                .antMatchers(“/sample/member”).hasRole(“USER”);</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    //인가/인증에 문제시 로그인 화면면
   http.formLogin();
   http.csrf().disable();
   
   http.logout();


   //이것을 추가해줌으로써 구글 로그인을 하면 이전과 달리 빈 화면만 보이게 된다.
   http.oauth2Login().successHandler(successHandler());
   
   //remember me 설정하는 것이다
    //rememberMe()를 적용할 때는 주로 쿠키를 얼마나 유지할 것인지를 같이 지정한다. 초(second) 단위로 설정하므로 이 코드는 7일간 쿠키가 유지되도록 지정하였다.
   http.rememberMe().tokenValiditySeconds(60*60*7).userDetailsService(userDetailsService());

   //실제 로그인 시에 OAuth를 사용한 로그인이 가능하도록 함
  // http.oauth2Login();
}

@Bean
public ClubLoginSuccessHandler successHandler(){
    return new ClubLoginSuccessHandler(passwordEncoder());
}
}
</code></pre></div></div>
:ET