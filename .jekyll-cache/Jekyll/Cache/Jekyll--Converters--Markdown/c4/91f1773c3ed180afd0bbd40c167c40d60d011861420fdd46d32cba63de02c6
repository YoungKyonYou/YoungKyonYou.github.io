I"*<p><br /><br /></p>

<h1 id="등록-페이지와-등록-처리"><center>등록 페이지와 등록 처리</center></h1>

<p><br /></p>

<p>등록의 처리는 이미 GuestbookService까지 완성되었기 때문에 GuestbookController에 약간의 코드를 추가해서 처리가 가능하다. 우선은 GuestbookController에 @GetMapping과 @PostMapping을 이용해서 등록 작업을 처리하는 메서드를 작성한다.</p>

<p><strong>GuestbookController.java</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="o">(...)</span>
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/list"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">list</span><span class="o">(</span><span class="nc">PageRequestDTO</span> <span class="n">pageRequestDTO</span><span class="o">,</span> <span class="nc">Model</span> <span class="n">model</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"list............."</span> <span class="o">+</span> <span class="n">pageRequestDTO</span><span class="o">);</span>

        <span class="n">model</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">"result"</span><span class="o">,</span> <span class="n">service</span><span class="o">.</span><span class="na">getList</span><span class="o">(</span><span class="n">pageRequestDTO</span><span class="o">));</span>

    <span class="o">}</span>
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/register"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">register</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"regiser get..."</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@PostMapping</span><span class="o">(</span><span class="s">"/register"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">registerPost</span><span class="o">(</span><span class="nc">GuestbookDTO</span> <span class="n">dto</span><span class="o">,</span> <span class="nc">RedirectAttributes</span> <span class="n">redirectAttributes</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"dto..."</span> <span class="o">+</span> <span class="n">dto</span><span class="o">);</span>

        <span class="c1">//새로 추가된 엔티티의 번호</span>
        <span class="nc">Long</span> <span class="n">gno</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>

        <span class="n">redirectAttributes</span><span class="o">.</span><span class="na">addFlashAttribute</span><span class="o">(</span><span class="s">"msg"</span><span class="o">,</span> <span class="n">gno</span><span class="o">);</span>

        <span class="k">return</span> <span class="s">"redirect:/guestbook/list"</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="o">(...)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>등록 작업은 GET 방식에서는 화면을 보여주고, POST 방식에서는 처리 후에 목록 페이지로 이동하도록 설계한다. 이때 RedirectAttributes를 이용해서 한 번만 화면에서 ‘msg’라는 이름의 변수를 사용할 수 있도록 처리한다. RedirectAttributes는 list.html로 내부적으로 msg라는 이름의 데이터를 심어서 전달한다. addFlashAttribute()는 단 한 번만 데이터를 전달하는 용도로 사용한다. 브라우저에 전달되는 ‘msg’를 이용해서는 화면 상에 모달 창을 보여주는 용도로 사용할 것인데, 글이 등록된 후에 자동으로 아래 그림과 같은 모달 창이 보이게 처리한다.</p>

<p><img src="/images/Learning_SpringBoot_with_Web_Project/Part2/Chapter4/2021-03-05-10-41-56.png" alt="" /></p>

<p><br /></p>

<p>등록 화면 register.html은 부트스트랩의 Form 태그를 이용하는 방식을 참고로 해서 다음과 같이 구성한다.</p>

<p><img src="/images/Learning_SpringBoot_with_Web_Project/Part2/Chapter4/2021-03-05-10-43-10.png" alt="" /></p>

<p><br /></p>

<p><strong>register.html</strong></p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span> <span class="na">xmlns:th=</span><span class="s">"http://www.thymeleaf.org"</span><span class="nt">&gt;</span>

<span class="nt">&lt;th:block</span> <span class="na">th:replace=</span><span class="s">"~{/layout/basic :: setContent(~{this::content} )}"</span><span class="nt">&gt;</span>

    <span class="nt">&lt;th:block</span> <span class="na">th:fragment=</span><span class="s">"content"</span><span class="nt">&gt;</span>

        <span class="nt">&lt;h1</span> <span class="na">class=</span><span class="s">"mt-4"</span><span class="nt">&gt;</span>GuestBook Register Page<span class="nt">&lt;/h1&gt;</span>

        <span class="nt">&lt;form</span> <span class="na">th:action=</span><span class="s">"@{/guestbook/register}"</span> <span class="na">th:method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;label</span> <span class="nt">&gt;</span>Title<span class="nt">&lt;/label&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">name=</span><span class="s">"title"</span> <span class="na">placeholder=</span><span class="s">"Enter Title"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;label</span> <span class="nt">&gt;</span>Content<span class="nt">&lt;/label&gt;</span>
                <span class="nt">&lt;textarea</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">rows=</span><span class="s">"5"</span> <span class="na">name=</span><span class="s">"content"</span><span class="nt">&gt;&lt;/textarea&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"form-group"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;label</span> <span class="nt">&gt;</span>Writer<span class="nt">&lt;/label&gt;</span>
                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">class=</span><span class="s">"form-control"</span> <span class="na">name=</span><span class="s">"writer"</span> <span class="na">placeholder=</span><span class="s">"Enter Writer"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/div&gt;</span>

            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span><span class="nt">&gt;</span>Submit<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;/form&gt;</span>

    <span class="nt">&lt;/th:block&gt;</span>

<span class="nt">&lt;/th:block&gt;</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>위 코드에서 th:action 속성은 폼 데이터(form data)를 서버로 보낼 때 해당 데이터가 도착할 URL을 명시한다. 여기서는 /guestbook/register를 명시하고 method를 post로 해놨는데 폼으로 입력되는 데이터들이 우리의 GuestbookController 클래스에</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="nd">@PostMapping</span><span class="o">(</span><span class="s">"/register"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">registerPost</span><span class="o">(</span><span class="nc">GuestbookDTO</span> <span class="n">dto</span><span class="o">,</span> <span class="nc">RedirectAttributes</span> <span class="n">redirectAttributes</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"dto..."</span> <span class="o">+</span> <span class="n">dto</span><span class="o">);</span>

        <span class="c1">//새로 추가된 엔티티의 번호</span>
        <span class="nc">Long</span> <span class="n">gno</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="n">dto</span><span class="o">);</span>

        <span class="n">redirectAttributes</span><span class="o">.</span><span class="na">addFlashAttribute</span><span class="o">(</span><span class="s">"msg"</span><span class="o">,</span> <span class="n">gno</span><span class="o">);</span>

        <span class="k">return</span> <span class="s">"redirect:/guestbook/list"</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>registerPost 메소드에게 보내져서 파라미터에 GuestbookDTO dto에게 매핑되어</p>
:ET