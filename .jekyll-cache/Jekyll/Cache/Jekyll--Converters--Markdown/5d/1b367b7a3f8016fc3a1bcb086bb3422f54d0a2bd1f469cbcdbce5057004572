I"+4<p><br /><br /></p>

<h1 id="연관관계-테스트">연관관계 테스트</h1>

<hr />

<p>데이터를 추가하는 작업을 PK 쪽에서부터 시작하는 것이 좋다. 프로젝트를 다음 그림과 같이 구성한다.</p>

<p><img src="/images/Learning_SpringBoot_with_Web_Project/Part3/Chapter5/2021-02-17-19-16-01.png" alt="" /></p>

<p><br /></p>

<p>작성하는 MemberRepositoryTests에는 MemberRepository를 주입하고 예제로 사용할 Member 객체를 100개 추가하는 테스트 코드를 작성한다.</p>

<p><br /></p>

<p><strong>MemberRepositoryTests 클래스</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="kn">package</span> <span class="nn">org.zerock.board.repository</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.zerock.board.entity.Member</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>
<span class="nd">@SpringBootTest</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemberRepositoryTests</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">MemberRepository</span> <span class="n">memberRepository</span><span class="o">;</span>

    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertMembers</span><span class="o">(){</span>
        <span class="nc">IntStream</span><span class="o">.</span><span class="na">rangeClosed</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">100</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;{</span>
            <span class="nc">Member</span> <span class="n">member</span><span class="o">=</span><span class="nc">Member</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">email</span><span class="o">(</span><span class="s">"user"</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="s">"@aaa.com"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">password</span><span class="o">(</span><span class="s">"1111"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"USER"</span><span class="o">+</span><span class="n">i</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
            <span class="n">memberRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">member</span><span class="o">);</span>
        <span class="o">});</span>
    <span class="o">}</span>
<span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>테스트의 실행 결과로 데이트베이스에 회원 데이터가 추가되었는지 확인한다.</p>

<p>BoardRepositoryTests 코드 역시 동일한 패키지에 추가하고 앞에서 만들어진 회원 데이터를 이용해서 Board 객체를 생성해서 추가하도록 테스트 코드를 작성한다.</p>

<p><br /></p>

<p><strong>BoardRepositoryTests 클래스</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="kn">package</span> <span class="nn">org.zerock.board.repository</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.domain.Page</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.domain.PageRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.domain.Pageable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.domain.Sort</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.transaction.annotation.Transactional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.zerock.board.entity.Board</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.zerock.board.entity.Member</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="nd">@SpringBootTest</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardRepositoryTests</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">BoardRepository</span> <span class="n">boardRepository</span><span class="o">;</span>
    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertBoard</span><span class="o">(){</span>
        <span class="nc">IntStream</span><span class="o">.</span><span class="na">rangeClosed</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">100</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;{</span>
            <span class="nc">Member</span> <span class="n">member</span><span class="o">=</span> <span class="nc">Member</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">email</span><span class="o">(</span><span class="s">"user"</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="s">"@aaa.com"</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
            <span class="nc">Board</span> <span class="n">board</span><span class="o">=</span><span class="nc">Board</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="s">"Title..."</span><span class="o">+</span><span class="n">i</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">content</span><span class="o">(</span><span class="s">"Content...."</span><span class="o">+</span><span class="n">i</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">writer</span><span class="o">(</span><span class="n">member</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
            <span class="n">boardRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">board</span><span class="o">);</span>
        <span class="o">});</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>testInsert()는 한 명의 사용자가 하나의 게시물을 등록하도록 작성되었다. 테스트 결과는 데이터베이스를 통해 확인한다.</p>

<p>댓글은 ReplyRepositoryTest 클래스를 작성해서 특정한 임의의 게시글을 대상으로 댓글을 추가한다. 현재 게시글은 1번부터 100번까지의 임의의 번호를 이용해서 300개의 댓글을 추가한다.</p>

<p><br /></p>

<p><strong>ReplyRepositoryTests 클래스</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="kn">package</span> <span class="nn">org.zerock.board.repository</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.zerock.board.entity.Board</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.zerock.board.entity.Reply</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.IntStream</span><span class="o">;</span>

<span class="nd">@SpringBootTest</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ReplyRepositoryTests</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">ReplyRepository</span> <span class="n">replyRepository</span><span class="o">;</span>

    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertReply</span><span class="o">(){</span>
        <span class="nc">IntStream</span><span class="o">.</span><span class="na">rangeClosed</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">300</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;{</span>
            <span class="kt">long</span> <span class="n">bno</span><span class="o">=(</span><span class="kt">long</span><span class="o">)(</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()*</span><span class="mi">100</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
            <span class="nc">Board</span> <span class="n">board</span><span class="o">=</span> <span class="nc">Board</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">bno</span><span class="o">(</span><span class="n">bno</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>

            <span class="nc">Reply</span> <span class="n">reply</span><span class="o">=</span><span class="nc">Reply</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                    <span class="o">.</span><span class="na">text</span><span class="o">(</span><span class="s">"Reply......"</span><span class="o">+</span><span class="n">i</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">board</span><span class="o">(</span><span class="n">board</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">replyer</span><span class="o">(</span><span class="s">"guest"</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">build</span><span class="o">();</span>
            <span class="n">replyRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">reply</span><span class="o">);</span>
        <span class="o">});</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>insertReply()는 300개의 댓글을 1~100 사이의 번호로 추가한다. 데이터베이스에는 1번부터 100번까지 게시물에 대해서 n개의 댓글이 추가된다.</p>

<p><br /></p>

:ET