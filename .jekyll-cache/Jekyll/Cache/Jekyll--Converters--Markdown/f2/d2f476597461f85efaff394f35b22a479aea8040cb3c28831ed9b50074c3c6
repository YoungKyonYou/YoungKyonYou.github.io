I"[<p><em>해당 내용은 책 ‘코드로 배우는 스프링 부트 웹 프로젝트’에 나오는 내용이며 이는 개인적으로 공부하기 위해 기록함을 알려드립니다</em></p>

<p><br /><br /></p>

<h1 id="프로젝트를-위한-jpa-처리"><center>프로젝트를 위한 JPA 처리</center></h1>

<p><br /></p>

<p>패키지와 자바 파일을 아래 사진과 같이 생성한다.</p>

<p><br /></p>

<p><img src="/images/Learning_SpringBoot_with_Web_Project/Part5/Chapter10/10-3/2021-07-25-17-21-10.png" alt="" /></p>

<p><br /></p>

<p><strong>BaseEntity.java</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">org.young.club.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">lombok.Getter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.annotation.CreatedDate</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.annotation.LastModifiedDate</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.domain.support.AuditingEntityListener</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.persistence.Column</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.EntityListeners</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.MappedSuperclass</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>

<span class="nd">@MappedSuperclass</span>
<span class="nd">@EntityListeners</span><span class="o">(</span><span class="n">value</span><span class="o">={</span><span class="nc">AuditingEntityListener</span><span class="o">.</span><span class="na">class</span><span class="o">})</span>
<span class="nd">@Getter</span>
<span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">BaseEntity</span> <span class="o">{</span>
    <span class="nd">@CreatedDate</span>
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"regdate"</span><span class="o">,</span><span class="n">updatable</span><span class="o">=</span><span class="kc">false</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">regDate</span><span class="o">;</span>

    <span class="nd">@LastModifiedDate</span>
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"moddate"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">modDate</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br /></p>

<p><strong>ClubMember.java</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">org.young.club.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">lombok.*</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.persistence.ElementCollection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.FetchType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>

<span class="nd">@Entity</span>
<span class="nd">@Builder</span>
<span class="nd">@AllArgsConstructor</span>
<span class="nd">@NoArgsConstructor</span>
<span class="nd">@Getter</span>
<span class="nd">@ToString</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClubMember</span> <span class="kd">extends</span> <span class="nc">BaseEntity</span><span class="o">{</span>
    <span class="nd">@Id</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">email</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">password</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">fromSocial</span><span class="o">;</span>

    <span class="c1">//이 어노테이션은 지정된 속성이 컬렉션을 사용할 것이라는 의미이다.</span>
    <span class="c1">//Entity가 아닌 단순한 형태의 객체 집합을 정의하고 관리하는 방법이다.</span>
    <span class="c1">//한 테이블에서 연관된 다른 테이블에 대한 정보를 다루는데 One-To-Many관계를 다룬다</span>

    <span class="c1">//Fetch Type은 크게 Eager와 Lazy 두 가지의 전략이 있습니다. Eager 전략은 엔티티를 조회할 때,</span>
    <span class="c1">// 연관 관계에 있는 엔티티도 함께 가져오고,</span>
    <span class="c1">// 반대로 Lazy 전략은 연관 관계 엔티티를 참조할 때 그때서야</span>
    <span class="c1">// 가져오게 됩니다.</span>
    <span class="nd">@ElementCollection</span><span class="o">(</span><span class="n">fetch</span><span class="o">=</span> <span class="nc">FetchType</span><span class="o">.</span><span class="na">LAZY</span><span class="o">)</span>
    <span class="nd">@Builder</span><span class="o">.</span><span class="na">Default</span>
    <span class="kd">private</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">ClubMemberRole</span><span class="o">&gt;</span> <span class="n">roleSet</span><span class="o">=</span><span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addMemberRole</span><span class="o">(</span><span class="nc">ClubMemberRole</span> <span class="n">clubMemberRole</span><span class="o">){</span>
        <span class="n">roleSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">clubMemberRole</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p><br /></p>

<p><strong>ClubMemberRole.java</strong></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<p><br /></p>
:ET