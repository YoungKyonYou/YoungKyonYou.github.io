I"<p><span style="color:orange; font-weight:bold"><em>해당 내용은 책 ‘코드로 배우는 스프링 부트 웹 프로젝트’에 나오는 내용이며 이는 개인적으로 공부하기 위해 기록함을 알려드립니다</em></span></p>

<p><br /><br /></p>

<h1 id="remember-me와-preauthorize"><center>Remember me와 @PreAuthorize</center></h1>

<p><br /></p>

<p>스프링 시큐리티의 편리한 기능 중에서 ‘자동 로그인’이라고 불리는 <strong>‘Remember me’</strong>는 최근 모바일과 함께 많이 사용된다. <strong>‘Remember me’</strong>는 웹의 인증 방식 중에 ‘쿠키(HttpCookie)’를 사용하는 방식이다. 이 기능을 활용하면 한번 로그인한 사용자가 브라우저를 닫은 후에 다시 서비스에 접속해도 별도의 로그인 저차 없이 바로 로그인 처리가 진행된다.</p>

<p><br /></p>

<p><strong>‘Remember me’</strong>에 대한 설정은 아주 간단하다. SecurityConfig에 아래와 같이 remembeMe()설정을 추가하고 UserDetailsService를 지정하면 된다.</p>

<p><strong>SecurityConfig.java</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(...)</span>
<span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="nc">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
       <span class="c1">//http.authorizeRequests()로 인증이 필요한 자원들을 설정할 수 있고 antMatchers()는</span>
        <span class="c1">// '**/*'와 같은 앤트 스타일의 패턴으로 원하는 자원을 선택할 수 있다.</span>
        <span class="c1">//마지막으로 permitAll()의 경우는 말 그대로 '모든 사용자에게 허락'한다는 의미이므로</span>
        <span class="c1">//로그인하지 않은 사용자도 익명의 사용자로 간주되어서 접근이 가능하게 된다.</span>
        <span class="c1">//프로젝트를 재시작해서 /sample/all에 접속하면 별도의 로그인 없이도 접근이 가능해 진다.</span>
        <span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">().</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">"/sample/all"</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span>
                                <span class="c1">//아래와 같이 설정하고 /sample/member'를 호출하면 Access Denied 된다.</span>
                                <span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">"/sample/member"</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">"USER"</span><span class="o">);</span>

        <span class="c1">//인가/인증에 문제시 로그인 화면면</span>
       <span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">();</span>
       <span class="n">http</span><span class="o">.</span><span class="na">csrf</span><span class="o">().</span><span class="na">disable</span><span class="o">();</span>
       
       <span class="n">http</span><span class="o">.</span><span class="na">logout</span><span class="o">();</span>


       <span class="c1">//이것을 추가해줌으로써 구글 로그인을 하면 이전과 달리 빈 화면만 보이게 된다.</span>
       <span class="n">http</span><span class="o">.</span><span class="na">oauth2Login</span><span class="o">().</span><span class="na">successHandler</span><span class="o">(</span><span class="n">successHandler</span><span class="o">());</span>
       
       <span class="c1">//remember me 설정하는 것이다</span>
        <span class="c1">//rememberMe()를 적용할 때는 주로 쿠키를 얼마나 유지할 것인지를 같이 지정한다. 초(second) 단위로 설정하므로 이 코드는 7일간 쿠키가 유지되도록 지정하였다.</span>
       <span class="n">http</span><span class="o">.</span><span class="na">rememberMe</span><span class="o">().</span><span class="na">tokenValiditySeconds</span><span class="o">(</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">7</span><span class="o">).</span><span class="na">userDetailsService</span><span class="o">(</span><span class="n">userDetailsService</span><span class="o">());</span>

       <span class="c1">//실제 로그인 시에 OAuth를 사용한 로그인이 가능하도록 함</span>
      <span class="c1">// http.oauth2Login();</span>
    <span class="o">}</span>

    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">ClubLoginSuccessHandler</span> <span class="nf">successHandler</span><span class="o">(){</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">ClubLoginSuccessHandler</span><span class="o">(</span><span class="n">passwordEncoder</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br /></p>

:ET