I"+<p><br /><br /></p>

<p><em><strong>오늘의 나보다 성장한 내일의 나를 위해…</strong></em></p>

<p><br /></p>

<p><br /><br /></p>

<style>
.containercoffee {
  width: 300px;
  height: 280px;
  position: relative;
  top: calc(50% - 140px);
  left: calc(50% - 150px);
}
.coffee-header {
  width: 100%;
  height: 80px;
  position: absolute;
  top: 0;
  left: 0;
  background-color: #ddcfcc;
  border-radius: 10px;
}
.coffee-header__buttons {
  width: 25px;
  height: 25px;
  position: absolute;
  top: 25px;
  background-color: #282323;
  border-radius: 50%;
}
.coffee-header__buttons::after {
  content: "";
  width: 8px;
  height: 8px;
  position: absolute;
  bottom: -8px;
  left: calc(50% - 4px);
  background-color: #615e5e;
}
.coffee-header__button-one {
  left: 15px;
}
.coffee-header__button-two {
  left: 50px;
}
.coffee-header__display {
  width: 50px;
  height: 50px;
  position: absolute;
  top: calc(50% - 25px);
  left: calc(50% - 25px);
  border-radius: 50%;
  background-color: #9acfc5;
  border: 5px solid #43beae;
  box-sizing: border-box;
}
.coffee-header__details {
  width: 8px;
  height: 20px;
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #9b9091;
  box-shadow: -12px 0 0 #9b9091, -24px 0 0 #9b9091;
}
.coffee-medium {
  width: 90%;
  height: 160px;
  position: absolute;
  top: 80px;
  left: calc(50% - 45%);
  background-color: #bcb0af;
}
.coffee-medium:before {
  content: "";
  width: 90%;
  height: 100px;
  background-color: #776f6e;
  position: absolute;
  bottom: 0;
  left: calc(50% - 45%);
  border-radius: 20px 20px 0 0;
}
.coffe-medium__exit {
  width: 60px;
  height: 20px;
  position: absolute;
  top: 0;
  left: calc(50% - 30px);
  background-color: #231f20;
}
.coffe-medium__exit::before {
  content: "";
  width: 50px;
  height: 20px;
  border-radius: 0 0 50% 50%;
  position: absolute;
  bottom: -20px;
  left: calc(50% - 25px);
  background-color: #231f20;
}
.coffe-medium__exit::after {
  content: "";
  width: 10px;
  height: 10px;
  position: absolute;
  bottom: -30px;
  left: calc(50% - 5px);
  background-color: #231f20;
}
.coffee-medium__arm {
  width: 70px;
  height: 20px;
  position: absolute;
  top: 15px;
  right: 25px;
  background-color: #231f20;
}
.coffee-medium__arm::before {
  content: "";
  width: 15px;
  height: 5px;
  position: absolute;
  top: 7px;
  left: -15px;
  background-color: #9e9495;
}
.coffee-medium__cup {
  width: 80px;
  height: 47px;
  position: absolute;
  bottom: 0;
  left: calc(50% - 40px);
  background-color: #FFF;
  border-radius: 0 0 70px 70px / 0 0 110px 110px;
}
.coffee-medium__cup::after {
  content: "";
  width: 20px;
  height: 20px;
  position: absolute;
  top: 6px;
  right: -13px;
  border: 5px solid #FFF;
  border-radius: 50%;
}
@keyframes liquid {
  0% {
    height: 0px;  
    opacity: 1;
  }
  5% {
    height: 0px;  
    opacity: 1;
  }
  20% {
    height: 62px;  
    opacity: 1;
  }
  95% {
    height: 62px;
    opacity: 1;
  }
  100% {
    height: 62px;
    opacity: 0;
  }
}
.coffee-medium__liquid {
  width: 6px;
  height: 63px;
  opacity: 0;
  position: absolute;
  top: 50px;
  left: calc(50% - 3px);
  background-color: #74372b;
  animation: liquid 4s 4s linear infinite;
}
.coffee-medium__smoke {
  width: 8px;
  height: 20px;
  position: absolute;  
  border-radius: 5px;
  background-color: #b3aeae;
}
@keyframes smokeOne {
  0% {
    bottom: 20px;
    opacity: 0;
  }
  40% {
    bottom: 50px;
    opacity: .5;
  }
  80% {
    bottom: 80px;
    opacity: .3;
  }
  100% {
    bottom: 80px;
    opacity: 0;
  }
}
@keyframes smokeTwo {
  0% {
    bottom: 40px;
    opacity: 0;
  }
  40% {
    bottom: 70px;
    opacity: .5;
  }
  80% {
    bottom: 80px;
    opacity: .3;
  }
  100% {
    bottom: 80px;
    opacity: 0;
  }
}
.coffee-medium__smoke-one {
  opacity: 0;
  bottom: 50px;
  left: 102px;
  animation: smokeOne 3s 4s linear infinite;
}
.coffee-medium__smoke-two {
  opacity: 0;
  bottom: 70px;
  left: 118px;
  animation: smokeTwo 3s 5s linear infinite;
}
.coffee-medium__smoke-three {
  opacity: 0;
  bottom: 65px;
  right: 118px;
  animation: smokeTwo 3s 6s linear infinite;
}
.coffee-medium__smoke-for {
  opacity: 0;
  bottom: 50px;
  right: 102px;
  animation: smokeOne 3s 5s linear infinite;
}
.coffee-footer {
  width: 95%;
  height: 15px;
  position: absolute;
  bottom: 25px;
  left: calc(50% - 47.5%);
  background-color: #41bdad;
  border-radius: 10px;
}
.coffee-footer::after {
  content: "";
  width: 106%;
  height: 26px;
  position: absolute;
  bottom: -25px;
  left: -8px;
  background-color: #000;
}
</style>

<div class="containercoffee">
    <div class="coffee-header">
      <div class="coffee-header__buttons coffee-header__button-one"></div>
      <div class="coffee-header__buttons coffee-header__button-two"></div>
      <div class="coffee-header__display"></div>
      <div class="coffee-header__details"></div>
    </div>
    <div class="coffee-medium">
      <div class="coffe-medium__exit"></div>
      <div class="coffee-medium__arm"></div>
      <div class="coffee-medium__liquid"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-one"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-two"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-three"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-for"></div>
      <div class="coffee-medium__cup"></div>
    </div>
    <div class="coffee-footer"></div>
</div>

<p><br /><br /><br /><br /><br /><br /><br /><br /></p>

<h2 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png" height="30" width="30" /> HTTP Connection
</h2>

<p><br /></p>

<p><span style="background: rgb(251,243,219)">커넥션 관리</span>는 HTTP의 주요 주제이다. 대규모로 커넥션을 열고 유지하는 것은 웹 사이트 혹은 웹 애플리케이션의 성능에 많은 영향을 준다. <span style="background: rgb(251,243,219)">HTTP/1.x</span>에는 몇 가지 모델이 존재한다.</p>

<ul>
  <li><strong>단기 커넥션</strong></li>
  <li><strong>영속적인 커넥션</strong></li>
  <li><strong>HTTP 파이프라이닝</strong></li>
</ul>

<p><br /></p>

<h4 style="color:#43ABC9;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png" height="20" width="20" /> 단기 커넥션
</h4>

<p><span style="background: rgb(251,243,219)">HTTP 본래의 모델</span>이자 HTTP/1.0의 기본 커넥션은 <span style="background: rgb(251,243,219)">단기 커넥션</span>이다. 각각의 HTTP 요청은 각각의 커넥션 상에서 실행된다. 이는 <span style="background: rgb(251,243,219)">TCP 핸드 셰이크</span>는 각 HTTP 요청 전에 발생하고, 이들이 직렬화됨을 의미한다.</p>

<p><br /></p>

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30" /> HTTP란?
</h3>

<p><br /></p>

<ul>
  <li>HTTP란 <strong>HyperText Transport Protocol</strong>의 약자로 웹서버롸 클라이언트 간의 문서를 교환하기 위한 통신규약이다.</li>
  <li>World Wide Web(WWW)의 분산되어 있는 <strong>Server와 Client</strong> 간에 <strong>Hypertext</strong>를 이용한 정보교환이 가능하도록 하는 <strong>통신 규약</strong>이다.</li>
  <li>1989년 Tim Berners Lee가 처음 설계</li>
  <li>HTTP는 웹에서만 사용하는 Protocol로 <strong>TCP/IP</strong> 기반으로 한 지점에서 다른 지점(보통 클라이언트와 서버)으로 <strong>요청과 응답</strong>을 전송한다.</li>
</ul>

<p><br /></p>

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30" /> HTTP의 특징
</h3>

<p><br /></p>

<ul>
  <li>HTTP 메시지는 <strong>HTTP Server</strong>와 <strong>HTTP Client</strong>에 의해서 해석</li>
  <li><strong>TCP/IP 프로토콜</strong>의 <strong>Application 계층</strong>에 위치</li>
  <li><strong>TCP Protocol</strong>을 이용한다(Default Port 80)</li>
  <li>현재 Version 1.1 (RFC 2616)</li>
</ul>

<p><br /></p>

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30" /> HTTP 1.1
</h3>

<p><br /></p>

<ul>
  <li><strong>HTTP 1.0</strong>의 성능 개선에 중점을 두었다.</li>
</ul>

<p><br /></p>

<h4 style="color:#43ABC9;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png" height="20" width="20" /> HTTP 1.0의 문제점
</h4>

<ul>
  <li>단순한 <strong>OPEN, OPERATION, CLOSE</strong></li>
  <li>매번 필요할 때마다 연결(비 지속성 연결방식) → 성능의 저하</li>
  <li>한번에 얻어서 가져올 수 있는 데이터 양이 <strong>제한</strong></li>
  <li>URL의 크기도 작으며, <strong>캐시 기능이 미흡함(Last-Modified에 의존)</strong></li>
  <li><strong>GET/HEAD/POST method</strong>만 허용</li>
</ul>

<p><br /></p>

<h4 style="color:#43ABC9;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png" height="20" width="20" /> HTTP 1.1의 개선
</h4>

<ul>
  <li><strong>지속적인 연결</strong>을 해 주는 <strong>persistent connection</strong> 지원</li>
  <li><strong>multiple request 처리</strong> 가능</li>
  <li><strong>reqeust/response</strong>가 <strong>pipeline</strong> 방식으로 진행</li>
  <li><strong>proxy server</strong>와 <strong>캐시 기능</strong> 향상(Cache-Control)</li>
  <li><strong>GET, HEAD, POST, OPTIONS, DELETE, TRACE, CONNECT</strong> 메소드 허용</li>
</ul>

<p><br /></p>

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30" /> 파이프라이닝(Pipe Lining) 이란?
</h3>

<p><br /></p>

<ul>
  <li>응답 메시지가 도착하지 않은 상태에서 <strong>연속적인 요구 메시지</strong>를 서버에 전달</li>
  <li>이때 서버는 요구 메시지를 <strong>수신한 순서대로 응답 메시지를 클라이언트에 전달</strong></li>
  <li><strong>연결과 종료횟수</strong>를 줄임으로서 네트워크 자원의 절약</li>
  <li>발생하는 <strong>패킷의 숫자</strong>를 감소, <strong>네트워크 트래픽</strong> 감소</li>
</ul>

<p><br /></p>

<p><img src="/images/Interview/post16/2022-01-15-13-13-57.png?style=centerme" alt="" /></p>

<p><br /></p>
:ET