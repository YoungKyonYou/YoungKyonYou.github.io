---
layout: post
title: eXBuilder6 사용 방법_1교시
date: 2022-05-23 13:00:00 0000
tags: [eXBuilder6]
categories: [eXBuilder6]
description: eXBuilder6 가이드
---

<br><br>

_**오늘의 나보다 성장한 내일의 나를 위해....**_

<br>

<br><br>

<style>
.containercoffee {
  width: 300px;
  height: 280px;
  position: relative;
  top: calc(50% - 140px);
  left: calc(50% - 150px);
}
.coffee-header {
  width: 100%;
  height: 80px;
  position: absolute;
  top: 0;
  left: 0;
  background-color: #ddcfcc;
  border-radius: 10px;
}
.coffee-header__buttons {
  width: 25px;
  height: 25px;
  position: absolute;
  top: 25px;
  background-color: #282323;
  border-radius: 50%;
}
.coffee-header__buttons::after {
  content: "";
  width: 8px;
  height: 8px;
  position: absolute;
  bottom: -8px;
  left: calc(50% - 4px);
  background-color: #615e5e;
}
.coffee-header__button-one {
  left: 15px;
}
.coffee-header__button-two {
  left: 50px;
}
.coffee-header__display {
  width: 50px;
  height: 50px;
  position: absolute;
  top: calc(50% - 25px);
  left: calc(50% - 25px);
  border-radius: 50%;
  background-color: #9acfc5;
  border: 5px solid #43beae;
  box-sizing: border-box;
}
.coffee-header__details {
  width: 8px;
  height: 20px;
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #9b9091;
  box-shadow: -12px 0 0 #9b9091, -24px 0 0 #9b9091;
}
.coffee-medium {
  width: 90%;
  height: 160px;
  position: absolute;
  top: 80px;
  left: calc(50% - 45%);
  background-color: #bcb0af;
}
.coffee-medium:before {
  content: "";
  width: 90%;
  height: 100px;
  background-color: #776f6e;
  position: absolute;
  bottom: 0;
  left: calc(50% - 45%);
  border-radius: 20px 20px 0 0;
}
.coffe-medium__exit {
  width: 60px;
  height: 20px;
  position: absolute;
  top: 0;
  left: calc(50% - 30px);
  background-color: #231f20;
}
.coffe-medium__exit::before {
  content: "";
  width: 50px;
  height: 20px;
  border-radius: 0 0 50% 50%;
  position: absolute;
  bottom: -20px;
  left: calc(50% - 25px);
  background-color: #231f20;
}
.coffe-medium__exit::after {
  content: "";
  width: 10px;
  height: 10px;
  position: absolute;
  bottom: -30px;
  left: calc(50% - 5px);
  background-color: #231f20;
}
.coffee-medium__arm {
  width: 70px;
  height: 20px;
  position: absolute;
  top: 15px;
  right: 25px;
  background-color: #231f20;
}
.coffee-medium__arm::before {
  content: "";
  width: 15px;
  height: 5px;
  position: absolute;
  top: 7px;
  left: -15px;
  background-color: #9e9495;
}
.coffee-medium__cup {
  width: 80px;
  height: 47px;
  position: absolute;
  bottom: 0;
  left: calc(50% - 40px);
  background-color: #FFF;
  border-radius: 0 0 70px 70px / 0 0 110px 110px;
}
.coffee-medium__cup::after {
  content: "";
  width: 20px;
  height: 20px;
  position: absolute;
  top: 6px;
  right: -13px;
  border: 5px solid #FFF;
  border-radius: 50%;
}
@keyframes liquid {
  0% {
    height: 0px;  
    opacity: 1;
  }
  5% {
    height: 0px;  
    opacity: 1;
  }
  20% {
    height: 62px;  
    opacity: 1;
  }
  95% {
    height: 62px;
    opacity: 1;
  }
  100% {
    height: 62px;
    opacity: 0;
  }
}
.coffee-medium__liquid {
  width: 6px;
  height: 63px;
  opacity: 0;
  position: absolute;
  top: 50px;
  left: calc(50% - 3px);
  background-color: #74372b;
  animation: liquid 4s 4s linear infinite;
}
.coffee-medium__smoke {
  width: 8px;
  height: 20px;
  position: absolute;  
  border-radius: 5px;
  background-color: #b3aeae;
}
@keyframes smokeOne {
  0% {
    bottom: 20px;
    opacity: 0;
  }
  40% {
    bottom: 50px;
    opacity: .5;
  }
  80% {
    bottom: 80px;
    opacity: .3;
  }
  100% {
    bottom: 80px;
    opacity: 0;
  }
}
@keyframes smokeTwo {
  0% {
    bottom: 40px;
    opacity: 0;
  }
  40% {
    bottom: 70px;
    opacity: .5;
  }
  80% {
    bottom: 80px;
    opacity: .3;
  }
  100% {
    bottom: 80px;
    opacity: 0;
  }
}
.coffee-medium__smoke-one {
  opacity: 0;
  bottom: 50px;
  left: 102px;
  animation: smokeOne 3s 4s linear infinite;
}
.coffee-medium__smoke-two {
  opacity: 0;
  bottom: 70px;
  left: 118px;
  animation: smokeTwo 3s 5s linear infinite;
}
.coffee-medium__smoke-three {
  opacity: 0;
  bottom: 65px;
  right: 118px;
  animation: smokeTwo 3s 6s linear infinite;
}
.coffee-medium__smoke-for {
  opacity: 0;
  bottom: 50px;
  right: 102px;
  animation: smokeOne 3s 5s linear infinite;
}
.coffee-footer {
  width: 95%;
  height: 15px;
  position: absolute;
  bottom: 25px;
  left: calc(50% - 47.5%);
  background-color: #41bdad;
  border-radius: 10px;
}
.coffee-footer::after {
  content: "";
  width: 106%;
  height: 26px;
  position: absolute;
  bottom: -25px;
  left: -8px;
  background-color: #000;
}
</style>

<div class="containercoffee">
    <div class="coffee-header">
      <div class="coffee-header__buttons coffee-header__button-one"></div>
      <div class="coffee-header__buttons coffee-header__button-two"></div>
      <div class="coffee-header__display"></div>
      <div class="coffee-header__details"></div>
    </div>
    <div class="coffee-medium">
      <div class="coffe-medium__exit"></div>
      <div class="coffee-medium__arm"></div>
      <div class="coffee-medium__liquid"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-one"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-two"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-three"></div>
      <div class="coffee-medium__smoke coffee-medium__smoke-for"></div>
      <div class="coffee-medium__cup"></div>
    </div>
    <div class="coffee-footer"></div>
</div>

<br><br><br><br><br><br><br><br>

<h2 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png" height="30" width="30"> eXBuilder6 가이드
</h2>

<br>
<Br>

<h4 style="color:#43ABC9;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png" height="20" width="20"> eXBuilder6 작업 디렉토리
</h4>

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> clx-src/theme/controls
</h3>

모든 작업은 **clx-src**에서 하게 된다.

![](/images/eXbuilder6/2022-05-24-17-20-40.png?style=centerme)

clx-src 안에 theme/control 폴더를 보게 되면 **part.less** 파일들을 볼 수 있다.

<br>

![](/images/eXbuilder6/2022-05-24-17-21-43.png?style=centerme)

<br>

이는 eXBuilder6에서 제공하고 있는 각각 하나의 컨트롤에 스타일을 적용할 수 있는 파일이다. 

각 컨트롤들의 스타일을 어떻게 적용할 것인지 파일로 관리할 수 있다.

<br>

아래 사진과 같이 eXBuilder6에서는 클래스 명에 **cl**이 붙어서 생성된다.

![](/images/eXbuilder6/2022-05-24-17-22-45.png?style=centerme)

<br>

**Ctrl+Space** 키를 누르게 되면 스타일에 대한 속성들이 나타난다.

![](/images/eXbuilder6/2022-05-24-17-23-37.png?style=centerme)

<br>

만약 색깔을 바꾸고 싶다면 color를 선택하고 또 **Ctrl+Space**를 누르게 되면 속성에 해당하는 설정 값 또한 **힌트**로 표시해준다.

![](/images/eXbuilder6/2022-05-24-17-24-56.png?style=centerme)

<br>

그리고 밑으로 내리게 되면 **cleopatra-theme.less** 파일이 보이는데 이를 열어본다.

![](/images/eXbuilder6/2022-05-24-17-25-44.png?style=centerme)

<br>

**cleopatra-theme.less** 파일 안에는 프로젝트에 있었던 **part.less** 파일이 모두 **import**가 되어 있는 것을 볼 수 있다.

![](/images/eXbuilder6/2022-05-24-17-26-17.png?style=centerme)

<br>

**part.less** 파일들은 컴파일이 되지 않는다. 그래서 less 파일에다가(이경우 cleopatra-theme.less) **import**를 시켜줘야 한다. 이는 배포 경로의 **theme** 폴더에 있는 **cleopatra-theme.css**로 되어 있는 것을 확인할 수 있다. 

![](/images/eXbuilder6/2022-05-24-17-28-35.png?style=centerme)

<br>

**theme/cleopatra-theme.css** 파일을 열게 되면 이렇게 **.part.less** 파일들이 하나의 파일로 컴파일 된 것을 볼 수 있다. 

![](/images/eXbuilder6/2022-05-24-17-29-15.png?style=centerme)

<br>

---

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> clx-src udc
</h3>

udc는 **User Define Control**로 eXBuilder6에서 제공하는 컨트롤이 아닌 사용자가 직접 컨트롤을 조합해서 만들고 싶다거나 공통적으로 많이 사용하는 컨트롤들을 합쳐서 만든다고 했을 때 **udc**를 만들고 반드시 **udc 폴터 아래에 파일을 생성** 해줘야 한다.

![](/images/eXbuilder6/2022-05-24-17-33-19.png?style=centerme)

<br>

다음으로 **env.json**은 **런타임 환경설정 파일**이라고 보면 된다. 

외부 라이브러리나 외부 스타일 시트에 대한 **url**을 입력해서 여기에다가 작성하면 전역적으로 올라가서 작성한 url의 파일들을 사용할 수 있다. 

현재는 **clx-src/theme/controls** 아래에 cleopatra-theme.less를 올리겠다는 것을 알 수 있다. 즉, 컴파일 되는 공간은 **clx-build/theme** 아래 cleopatra-theme.css가 되는 것을 알 수 있다. (배포할 때)

![](/images/eXbuilder6/2022-05-24-17-35-42.png?style=centerme)


---

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> clx-src/udc/language.json
</h3>

language.json 파일은 다국어를 사용할 때 입력하면 되는 공간이다.

![](/images/eXbuilder6/2022-05-24-17-38-19.png?style=centerme)

![](/images/eXbuilder6/2022-05-24-17-38-44.png?style=centerme)

<br>

---

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> 새 파일 만들기
</h3>

이름을 작성하고 **Next**를 누른다.

![](/images/eXbuilder6/2022-05-24-17-40-59.png?style=centerme)

<br>

Next 후에는 template을 정하게 되는데 여기서는 생성된 템플릿이 없으므로 생략하고 Next로 넘어간다.

![](/images/eXbuilder6/2022-05-24-17-41-31.png?style=centerme)

<br>

이제는 스크린을 선택할 수 있는 창이 나타나게 된다. **eXBuilder6에서 제공하는 반응형 XY 레이아웃이 있다.** 

이는 각각 파일에 프리셋마다 배치를 다르게하거나 컨트롤을 숨길 수 있어서 각 화면을 새로운 크기로 생성이 가능하다.

**default, tablet, mobile 사이즈를 기본적으로 제공하고 있다

![](/images/eXbuilder6/2022-05-24-17-42-15.png?style=centerme)

<br>

또는 추가버튼(+버튼)을 눌러서 원하는 사이즈의 프리셋을 추가할 수 있다.

![](/images/eXbuilder6/2022-05-24-17-43-54.png?style=centerme)

<br>

일단 defualt를 선택하고 Finish를 눌러 새 eXBuilder6 파일을 생성한다.

그리고 보면 **edu01.clx** 파일과 **edu01.js** 파일이 생성되는 것을 볼 수 있다. 소스 경로에서는 clx파일이나 js 파일 두개가 있다.

![](/images/eXbuilder6/2022-05-24-17-45-01.png?style=centerme)

<br>

그리고 배포 경로를 보게되면(clx-build) 이 **두 파일이 컴파일**되어 배포 경로에서 하나의 **.clx.js 파일**로 생성된다. 

![](/images/eXbuilder6/2022-05-24-17-47-55.png?style=centerme)

<br>

스크립트 탭에서 작성한 스크립트는 .js 파일로 저장된다. 파일을 열때는 clx 파일을 열고 하단에 **스크립트**로 나타난다.

![](/images/eXbuilder6/2022-05-25-09-45-31.png?style=centerme)

<br>

<span style="background: rgb(251,243,219)">파일 복사 시에도 .clx와 .js 파일을 함께 복사/이동</span> 시켜줘야 한다.

---

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> Palette 사용하기
</h3>

Palette에서 다양한 도구를 선택할 수 있다. 버튼을 예로 보면 클릭한 상태에서 사이즈를 조절할 수도 있다.

![](/images/eXbuilder6/2022-05-25-09-50-55.png?style=centerme)

<br>

<span style="background: rgb(251,243,219)">스크립트에서는 ES5 문법 사용을 권장한다.</span>

![](/images/eXbuilder6/2022-05-25-09-52-46.png?style=centerme)

<br>

하단에 소스 탭은 xml 파일이며 도구의 속성 값들이 명시되어 있다. 소스 탭으로 값을 변경하기보다는 **디자인 탭**에서 변경하는 게 좋다. <span style="background: rgb(251,243,219)">오타가 날 여지가 있기 때문</span>이다. 

![](/images/eXbuilder6/2022-05-25-09-54-32.png?style=centerme)

---

<h3 style="color:#107896;  font-weight:bold">
<img class="emoji" title=":pushpin:" alt=":pushpin:" src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png" height="30" width="30"> 브라우저 미리보기 시 브라우저 바꾸는 방법
</h3>

**Window->Preference**로 먼저 접속한다.

![](/images/eXbuilder6/2022-05-25-09-57-11.png?style=centerme)

<br>

**General->Web Browser**로 들어간다. 그리고 체크 박스를 통해서 변경이 가능하다.

![](/images/eXbuilder6/2022-05-25-09-57-37.png?style=centerme)

<br>

---

그리드를 디자인 탭에 드랍하게 되면 사진과 같이 아래 그리드 편집기 탭이 추가된다. 그리고 그리드는 특수한 컨트롤이기 때문에 **별도의 편집 탭을 제공**하고 있다.

![](/images/eXbuilder6/2022-05-25-10-53-44.png?style=centerme)

<br>

이제 각 컨트롤의 **Properties**에 대해 설명해본다. 여기에 있는 6가지 탭에 대해 이야기 해본다.

![](/images/eXbuilder6/2022-05-25-10-54-56.png?style=centerme)

<br>

디자인 탭에 들어간 후 디자인의 빈 공간을 클릭한 다음 Properties의 일반 탭을 누르게 되면 아래 사진과 같이 <span style="background: rgb(251,243,219)">루트 컨테이너</span>가 보이는 것을 알 수 있다. <span style="background: rgb(251,243,219)">루트 컨테이너는 최상위 body를 지칭한다.</span>

![](/images/eXbuilder6/2022-05-25-10-56-01.png?style=centerme)

<br>

일반 탭의 아래에 앱이라는 것이 있는데 여기서의 앱은 **clx 파일** 하나를 의미한다고 생각하면 된다. 이 파일의 **타이틀**을 지정할 수 있다. 맨처음에는 파일명과 동일하게 이 **title**이 **default**으로 지정된다. 

![](/images/eXbuilder6/2022-05-25-10-58-29.png?style=centerme)

<br>

만약 파일을 다른 사람들과 공유해야 할 때 어떤 파일인지 모르는데 이 **title**를 다른 것으로 작성하고 **Project Explorer**를 보게 되면 방금 작성한 **title**에 대해 바뀌는 것을 볼 수 있다. 이렇게 되면 이 clx 파일이 어떤 파일인지 다같이 공유할 수 있게 되는 것이다. 즉 이 **앱-title**은 <span style="background: rgb(251,243,219)">clx 파일의 제목</span>이라고 볼 수 있는 것이다. 

![](/images/eXbuilder6/2022-05-25-11-00-07.png?style=centerme)

<br>

**Ctrl+Shift+,**를 누르게 되면 다이얼로그가 나타난다.

![](/images/eXbuilder6/2022-05-25-11-01-40.png?style=centerme)

<br>

여기서 조회라고 검색을 하게 되면 입력한 검색어로 **title**과 **앱 주석** 내에서 탐색이 이루어진다. 

![](/images/eXbuilder6/2022-05-25-11-02-08.png?style=centerme)

<br>

아래 사진은 앱 주석에 **조회**라는 단어가 들어가는 것을 보여준다.

![](/images/eXbuilder6/2022-05-25-11-02-50.png?style=centerme)

<br>

아래 사진은 방금 **title**에서 설정한 조회용 파일에서 **조회**라는 단어가 들어가기 때문에 검색이 되는 것을 볼 수 있다. 

![](/images/eXbuilder6/2022-05-25-11-03-13.png?style=centerme)

<br>

이제 버튼을 눌러보고 **Properties** 탭을 보자. 그렇게 되면 회색으로 쓰여져 있는 것과 검은색으로 쓰여져 있는 것을 볼 수 있는데 회색은 **default** 값으로 설정되어 있는 것이다. 다른 값을 선택했을 때는 검정색으로 보여진다.

![](/images/eXbuilder6/2022-05-25-11-05-16.png?style=centerme)

<br>

쉽게 **default** 값으로 변경하려면 해당 Properties를 클릭하고 위에 X 표시를 눌러주면 사용자가 설정한 값에서 다시 default 값으로 변경해준다. 

![](/images/eXbuilder6/2022-05-25-11-06-37.png?style=centerme)

<br>

이제 버튼 컨트롤을 클릭하고 **Properties**의 스타일 탭에 들어가본다.

![](/images/eXbuilder6/2022-05-25-11-09-04.png?style=centerme)

<br>

버튼에는 **icon**를 넣을 수 있다. 그래서 **iconStyle**이라는 것이 따로 있다. 그리고 각각 css를 쉽게 변경할 수 있다. 

![](/images/eXbuilder6/2022-05-25-11-09-32.png?style=centerme)

<br>

여기서 주의해야 할 점은 **Properties**의 **스타일** 탭에서 적용한 스타일의 우선순위가 **theme**의 **part.less** 파일로 설정한 스타일보다 **우선순위가 높다는 것이다.**

![](/images/eXbuilder6/2022-05-25-11-12-39.png?style=centerme)

<br>

이제 다시 **루트 컨테이너** 이 body를 디자인 탭에서 클릭한 다음에 **Properties**의 **레이아웃** 탭을 클릭해본다. 여길 보면 **XY 레이아웃**이라고 되어 있는 것이 있는데 이것은 eXBuilder6에서 <span style="background: rgb(251,243,219)">기본적으로 사용하는 레이아웃이다.</span> 파일을 생성했을 때 XY레이아웃으로 파일이 지정된다고 기억하면 된다. 

![](/images/eXbuilder6/2022-05-25-11-16-10.png?style=centerme)

<br>

**루트 컨테이너**를 클릭했을 때는 **XY레이아웃**이라고 나왔으나 각각의 컨트롤을 클릭하고 **Properties**의 **레이아웃** 탭을 보면 컨트롤의 크기 및 좌표를 볼 수 있다.

![](/images/eXbuilder6/2022-05-25-11-17-31.png?style=centerme)

<br>

버튼 컨트롤을 오른쪽 클릭하면 이벤트 항목이 존재한다. 이 이벤트 항목에서 내가 원하는 이벤트 찾아서 클릭하면 스크립트 탭으로 넘어갈 수 있고 

![](/images/eXbuilder6/2022-05-25-11-20-20.png?style=centerme)'

<br>

**Properties**의 **이벤트** 탭에서 click 속성이 있는데 click 이벤트를 더블 클릭해본다.

![](/images/eXbuilder6/2022-05-25-11-20-57.png?style=centerme)

<br>

클릭하게 되면 **스크립트** 탭으로 이동하게 되면서 클릭 이벤트 메소드가 자동으로 생성되는 것을 알 수 있다. 그래서 초록색

![](/images/eXbuilder6/2022-05-25-11-22-04.png?style=centerme)

<br>

옆에 **B**를 클릭하면

![](/images/eXbuilder6/2022-05-25-12-30-28.png?style=centerme)

<br>

다시 디자인 탭에 해당하는 버튼으로 선택되는 것을 볼 수 있다. 

![](/images/eXbuilder6/2022-05-25-12-31-09.png?style=centerme)

<br>

이제 test라는 새로운 함수를 만들어 본다.

![](/images/eXbuilder6/2022-05-25-12-32-23.png?style=centerme)

<br>

그리고 다시 디자인 탭의 해당하는 버튼으로 돌아와서 **Properties**의 **이벤트** 항목을 본다. **click** 속성을 더블 클릭을 하게되면 메소드들의 목록을 볼 수 있다. 

![](/images/eXbuilder6/2022-05-25-12-33-08.png?style=centerme)

<br>

이렇게 되면 버튼을 누를 때 test 메소드가 실행되는 것을 알 수 있다. 

![](/images/eXbuilder6/2022-05-25-12-33-59.png?style=centerme)